{"version":3,"file":"rete-area-plugin.min.js","sources":["src/content.ts","src/utils.ts","src/drag.ts","src/zoom.ts","src/area.ts","src/base.ts","src/connection-view.ts","src/elements-holder.ts","src/node-view.ts","src/extensions/shared/utils.ts","src/extensions/selectable.ts","src/extensions/zoom-at.ts","src/extensions/bounding-box.ts","src/extensions/order.ts","src/extensions/restrictor.ts","src/extensions/show-input-control.ts","src/extensions/snap.ts","src/index.ts"],"sourcesContent":["export class Content {\n  public holder: HTMLElement\n\n  constructor(private reordered: (target: HTMLElement) => Promise<unknown>) {\n    this.holder = document.createElement('div')\n    this.holder.style.transformOrigin = '0 0'\n  }\n\n  public getPointerFrom(event: MouseEvent) {\n    const { left, top } = this.holder.getBoundingClientRect()\n    const x = event.clientX - left\n    const y = event.clientY - top\n\n    return { x, y }\n  }\n\n  add(element: HTMLElement) {\n    this.holder.appendChild(element)\n  }\n\n  // eslint-disable-next-line no-undef\n  async reorder(target: HTMLElement, next: ChildNode | null) {\n    if (!this.holder.contains(target)) {\n      throw new Error(`content doesn't have 'target' for reordering`)\n    }\n    if (next !== null && !this.holder.contains(next)) {\n      throw new Error(`content doesn't have 'next' for reordering`)\n    }\n\n    this.holder.insertBefore(target, next)\n    await this.reordered(target)\n  }\n\n  remove(element: HTMLElement) {\n    if (this.holder.contains(element)) {\n      this.holder.removeChild(element)\n    }\n  }\n}\n","import { Position, Size } from './types'\n\ntype PointerHandler = (event: PointerEvent) => void\ntype PointerListenerHandlers = {\n  down: PointerHandler\n  move: PointerHandler\n  up: PointerHandler\n}\n\nexport type PointerListener = { destroy: () => void }\n\n/**\n * listen to pointerdown, window's pointermove and pointerup events,\n * where last two not active before pointerdown triggered for performance reasons\n */\nexport function usePointerListener(element: HTMLElement, handlers: PointerListenerHandlers): PointerListener {\n  const move: PointerHandler = event => {\n    handlers.move(event)\n  }\n  const up: PointerHandler = event => {\n    window.removeEventListener('pointermove', move)\n    window.removeEventListener('pointerup', up)\n    window.removeEventListener('pointercancel', up)\n    handlers.up(event)\n  }\n  const down: PointerHandler = event => {\n    window.addEventListener('pointermove', move)\n    window.addEventListener('pointerup', up)\n    window.addEventListener('pointercancel', up)\n    handlers.down(event)\n  }\n\n  element.addEventListener('pointerdown', down)\n\n  return {\n    destroy() {\n      element.removeEventListener('pointerdown', down)\n      window.removeEventListener('pointermove', move)\n      window.removeEventListener('pointerup', up)\n      window.removeEventListener('pointercancel', up)\n    }\n  }\n}\n\n/**\n * Bounding box\n */\nconst min = (arr: number[]) => arr.length === 0\n  ? 0\n  : Math.min(...arr)\nconst max = (arr: number[]) => arr.length === 0\n  ? 0\n  : Math.max(...arr)\n\nexport function getBoundingBox(rects: ({ position: Position } & Size)[]) {\n  const left = min(rects.map(rect => rect.position.x))\n  const top = min(rects.map(rect => rect.position.y))\n  const right = max(rects.map(rect => rect.position.x + rect.width))\n  const bottom = max(rects.map(rect => rect.position.y + rect.height))\n\n  return {\n    left,\n    right,\n    top,\n    bottom,\n    width: Math.abs(left - right),\n    height: Math.abs(top - bottom),\n    center: {\n      x: (left + right) / 2,\n      y: (top + bottom) / 2\n    }\n  }\n}\n","import { Position } from './types'\nimport { PointerListener, usePointerListener } from './utils'\n\ntype Events = {\n  start: (e: PointerEvent) => void\n  translate: (x: number, y: number, e: PointerEvent) => unknown\n  drag: (e: PointerEvent) => void\n}\n\ntype Guards = {\n  down: (e: PointerEvent) => boolean\n  move: (e: PointerEvent) => boolean\n}\n\ntype DragConfig = {\n  getCurrentPosition: () => Position\n  getZoom: () => number\n}\n\n/**\n * Drag handler, used to handle dragging of the area and nodes. Can be extended to add custom behavior.\n */\nexport class Drag {\n  private pointerStart?: Position\n  private startPosition?: Position\n  private pointerListener!: PointerListener\n  protected config!: DragConfig\n  protected events!: Events\n  protected guards: Guards\n\n  constructor(guards?: Guards) {\n    this.guards = guards || {\n      down: e => !(e.pointerType === 'mouse' && e.button !== 0),\n      move: () => true\n    }\n  }\n\n  public initialize(element: HTMLElement, config: DragConfig, events: Events) {\n    this.config = config\n    this.events = events\n    element.style.touchAction = 'none'\n    this.pointerListener = usePointerListener(element, {\n      down: this.down,\n      move: this.move,\n      up: this.up\n    })\n  }\n\n  private down = (e: PointerEvent) => {\n    if (!this.guards.down(e)) return\n\n    e.stopPropagation()\n    this.pointerStart = { x: e.pageX, y: e.pageY }\n    this.startPosition = { ...this.config.getCurrentPosition() }\n\n    this.events.start(e)\n  }\n\n  private move = (e: PointerEvent) => {\n    if (!this.pointerStart || !this.startPosition) return\n    if (!this.guards.move(e)) return\n    e.preventDefault()\n\n    const delta = {\n      x: e.pageX - this.pointerStart.x,\n      y: e.pageY - this.pointerStart.y\n    }\n    const zoom = this.config.getZoom()\n    const x = this.startPosition.x + delta.x / zoom\n    const y = this.startPosition.y + delta.y / zoom\n\n    void this.events.translate(x, y, e)\n  }\n\n  private up = (e: PointerEvent) => {\n    if (!this.pointerStart) return\n\n    delete this.pointerStart\n    this.events.drag(e)\n  }\n\n  public destroy() {\n    this.pointerListener.destroy()\n  }\n}\n","\n/**\n * Zoom source\n */\nexport type ZoomSource = 'wheel' | 'touch' | 'dblclick'\nexport type OnZoom = (delta: number, ox: number, oy: number, source?: ZoomSource) => void\n\n/**\n * Zoom class, used to handle zooming of the area. Can be extended to add custom behavior.\n * @internal\n */\nexport class Zoom {\n  protected previous: { cx: number, cy: number, distance: number } | null = null\n  protected pointers: PointerEvent[] = []\n  protected container!: HTMLElement\n  protected element!: HTMLElement\n  protected onzoom!: OnZoom\n\n  constructor(protected intensity: number) { }\n\n  public initialize(container: HTMLElement, element: HTMLElement, onzoom: OnZoom) {\n    this.container = container\n    this.element = element\n    this.onzoom = onzoom\n    this.container.addEventListener('wheel', this.wheel)\n    this.container.addEventListener('pointerdown', this.down)\n    this.container.addEventListener('dblclick', this.dblclick)\n\n    window.addEventListener('pointermove', this.move)\n    window.addEventListener('pointerup', this.up)\n    window.addEventListener('pointercancel', this.up)\n    window.addEventListener('contextmenu', this.contextmenu)\n  }\n\n  protected wheel = (e: WheelEvent) => {\n    e.preventDefault()\n\n    const { left, top } = this.element.getBoundingClientRect()\n    const isNegative = e.deltaY < 0\n    const delta = isNegative\n      ? this.intensity\n      : -this.intensity\n    const ox = (left - e.clientX) * delta\n    const oy = (top - e.clientY) * delta\n\n    this.onzoom(delta, ox, oy, 'wheel')\n  }\n\n  private getTouches() {\n    const e = { touches: this.pointers }\n    const [x1, y1] = [e.touches[0].clientX, e.touches[0].clientY]\n    const [x2, y2] = [e.touches[1].clientX, e.touches[1].clientY]\n\n    const distance = Math.sqrt(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2))\n\n    return {\n      cx: (x1 + x2) / 2,\n      cy: (y1 + y2) / 2,\n      distance\n    }\n  }\n\n  protected down = (e: PointerEvent) => {\n    this.pointers.push(e)\n  }\n\n  protected move = (e: PointerEvent) => {\n    this.pointers = this.pointers.map(p => p.pointerId === e.pointerId\n      ? e\n      : p)\n    if (!this.isTranslating()) return\n\n    const { left, top } = this.element.getBoundingClientRect()\n    const { cx, cy, distance } = this.getTouches()\n\n    if (this.previous !== null && this.previous.distance > 0) {\n      const delta = distance / this.previous.distance - 1\n\n      const ox = (left - cx) * delta\n      const oy = (top - cy) * delta\n\n      this.onzoom(delta, ox - (this.previous.cx - cx), oy - (this.previous.cy - cy), 'touch')\n    }\n    this.previous = { cx, cy, distance }\n  }\n\n  protected contextmenu = () => {\n    this.pointers = []\n  }\n\n  protected up = (e: PointerEvent) => {\n    this.previous = null\n    this.pointers = this.pointers.filter(p => p.pointerId !== e.pointerId)\n  }\n\n  protected dblclick = (e: MouseEvent) => {\n    e.preventDefault()\n\n    const { left, top } = this.element.getBoundingClientRect()\n    const delta = 4 * this.intensity\n\n    const ox = (left - e.clientX) * delta\n    const oy = (top - e.clientY) * delta\n\n    this.onzoom(delta, ox, oy, 'dblclick')\n  }\n\n  public isTranslating() { // is translating while zoom (works on multitouch)\n    return this.pointers.length >= 2\n  }\n\n  public destroy() {\n    this.container.removeEventListener('wheel', this.wheel)\n    this.container.removeEventListener('pointerdown', this.down)\n    this.container.removeEventListener('dblclick', this.dblclick)\n\n    window.removeEventListener('pointermove', this.move)\n    window.removeEventListener('pointerup', this.up)\n    window.removeEventListener('pointercancel', this.up)\n    window.removeEventListener('contextmenu', this.contextmenu)\n  }\n}\n","import { Content } from './content'\nimport { Drag } from './drag'\nimport { Position } from './types'\nimport { Zoom, ZoomSource } from './zoom'\n\nexport type Transform = Position & { k: number }\nexport type TranslateEventParams = { previous: Transform, position: Position }\nexport type ZoomEventParams = { previous: Transform, zoom: number, source?: ZoomSource }\n\ntype Events = {\n  zoomed: (params: ZoomEventParams) => Promise<unknown>\n  pointerDown: (position: Position, event: PointerEvent) => void\n  pointerMove: (position: Position, event: PointerEvent) => void\n  pointerUp: (position: Position, event: PointerEvent) => void\n  resize: (event: Event) => void\n  translated: (params: TranslateEventParams) => Promise<unknown>\n  reordered: (element: HTMLElement) => Promise<unknown>\n}\ntype Guards = {\n  translate: (params: TranslateEventParams) => Promise<unknown>\n  zoom: (params: ZoomEventParams) => Promise<unknown>\n}\n\nexport class Area {\n  public transform: Transform = { k: 1, x: 0, y: 0 }\n  public pointer: Position = { x: 0, y: 0 }\n  public content: Content\n\n  private zoomHandler: Zoom | null = null\n  private dragHandler: Drag | null = null\n\n  constructor(private container: HTMLElement, private events: Events, private guards: Guards) {\n    this.content = new Content(element => this.events.reordered(element))\n    this.content.holder.style.transformOrigin = '0 0'\n\n    this.setZoomHandler(new Zoom(0.1))\n    this.setDragHandler(new Drag())\n\n    this.container.addEventListener('pointerdown', this.pointerdown)\n    this.container.addEventListener('pointermove', this.pointermove)\n    window.addEventListener('pointerup', this.pointerup)\n    window.addEventListener('resize', this.resize)\n\n    container.appendChild(this.content.holder)\n    this.update()\n  }\n\n  private update() {\n    const { x, y, k } = this.transform\n\n    this.content.holder.style.transform = `translate(${x}px, ${y}px) scale(${k})`\n  }\n\n  /**\n   * Drag handler. Destroy previous drag handler if exists.\n   * @param drag drag handler\n   * @example area.area.setDragHandler(null) // disable drag\n   */\n  public setDragHandler(drag: Drag | null) {\n    if (this.dragHandler) this.dragHandler.destroy()\n    this.dragHandler = drag\n    if (this.dragHandler) this.dragHandler.initialize(\n      this.container,\n      {\n        getCurrentPosition: () => this.transform,\n        getZoom: () => 1\n      },\n      {\n        start: () => null,\n        translate: this.onTranslate,\n        drag: () => null\n      }\n    )\n  }\n\n  /**\n   * Set zoom handler. Destroy previous zoom handler if exists.\n   * @param zoom zoom handler\n   * @example area.area.setZoomHandler(null) // disable zoom\n   */\n  public setZoomHandler(zoom: Zoom | null) {\n    if (this.zoomHandler) this.zoomHandler.destroy()\n    this.zoomHandler = zoom\n    if (this.zoomHandler) this.zoomHandler.initialize(this.container, this.content.holder, this.onZoom)\n  }\n\n  public setPointerFrom(event: MouseEvent) {\n    const { x, y } = this.content.getPointerFrom(event)\n    const { k } = this.transform\n\n    this.pointer = { x: x / k, y: y / k }\n  }\n\n  private pointerdown = (event: PointerEvent) => {\n    this.setPointerFrom(event)\n    this.events.pointerDown(this.pointer, event)\n  }\n\n  private pointermove = (event: PointerEvent) => {\n    this.setPointerFrom(event)\n    this.events.pointerMove(this.pointer, event)\n  }\n\n  private pointerup = (event: PointerEvent) => {\n    this.setPointerFrom(event)\n    this.events.pointerUp(this.pointer, event)\n  }\n\n  private resize = (event: Event) => {\n    this.events.resize(event)\n  }\n\n  private onTranslate = (x: number, y: number) => {\n    if (this.zoomHandler?.isTranslating()) return // lock translation while zoom on multitouch\n    void this.translate(x, y)\n  }\n\n  private onZoom = (delta: number, ox: number, oy: number, source?: ZoomSource) => {\n    void this.zoom(this.transform.k * (1 + delta), ox, oy, source)\n\n    this.update()\n  }\n\n  /**\n   * Change position of the area\n   * @param x desired x coordinate\n   * @param y desired y coordinate\n   * @returns true if the translation was successful, false otherwise\n   * @emits translate\n   * @emits translated\n   */\n  public async translate(x: number, y: number) {\n    type T = undefined | { data: TranslateEventParams }\n    const position = { x, y }\n    const result = await this.guards.translate({ previous: this.transform, position }) as T\n\n    if (!result) return false\n\n    this.transform.x = result.data.position.x\n    this.transform.y = result.data.position.y\n\n    this.update()\n\n    await this.events.translated(result.data)\n    return true\n  }\n\n  /**\n   * Change zoom level of the area\n   * @param zoom new zoom level\n   * @param ox x coordinate of the origin of the zoom\n   * @param oy y coordinate of the origin of the zoom\n   * @param source source of the zoom\n   * @returns true if the zoom was successful, false otherwise\n   * @emits zoom\n   * @emits zoomed\n   */\n  public async zoom(zoom: number, ox = 0, oy = 0, source?: ZoomSource) {\n    type T = undefined | { data: ZoomEventParams }\n    const k = this.transform.k\n    const result = await this.guards.zoom({ previous: this.transform, zoom, source }) as T\n\n    if (!result) return true\n\n    const d = (k - result.data.zoom) / (k - zoom || 1)\n\n    this.transform.k = result.data.zoom || 1\n    this.transform.x += ox * d\n    this.transform.y += oy * d\n\n    this.update()\n\n    await this.events.zoomed(result.data)\n    return false\n  }\n\n  public destroy() {\n    this.container.removeEventListener('pointerdown', this.pointerdown)\n    this.container.removeEventListener('pointermove', this.pointermove)\n    window.removeEventListener('pointerup', this.pointerup)\n    window.removeEventListener('resize', this.resize)\n    if (this.dragHandler) this.dragHandler.destroy()\n    if (this.zoomHandler) this.zoomHandler.destroy()\n    this.content.holder.innerHTML = ''\n  }\n}\n","/* eslint-disable @typescript-eslint/no-invalid-void-type */\nimport { BaseSchemes, ConnectionId, NodeId, Root, Scope } from 'rete'\n\nimport { NodeResizeEventParams, NodeTranslateEventParams } from './node-view'\nimport { GetRenderTypes, Position, RenderSignal } from './types'\n\ninterface NodeView {\n  element: HTMLElement\n  position: Position\n  translate(x: number, y: number): Promise<boolean>\n  resize(width: number, height: number): Promise<boolean>\n}\n\ninterface ConnectionView {\n  element: HTMLElement\n}\n\ninterface Content {\n  holder: HTMLElement\n  add(element: HTMLElement): void\n  // eslint-disable-next-line no-undef\n  reorder(target: HTMLElement, next: ChildNode | null): void\n  remove(element: HTMLElement): void\n}\n\ninterface Area {\n  pointer: Position\n  content: Content\n}\n\n/**\n * A union of all possible signals that can be emitted by any area plugin\n * @priority 10\n */\nexport type BaseArea<Schemes extends BaseSchemes> =\n  | { type: 'nodepicked', data: { id: string } }\n  | { type: 'nodedragged', data: Schemes['Node'] }\n  | { type: 'nodetranslate', data: { id: string } & NodeTranslateEventParams }\n  | { type: 'nodetranslated', data: { id: string } & NodeTranslateEventParams }\n  | { type: 'contextmenu', data: { event: MouseEvent, context: 'root' | Schemes['Node'] | Schemes['Connection'] } }\n  | { type: 'pointerdown', data: { position: Position, event: PointerEvent } }\n  | { type: 'pointermove', data: { position: Position, event: PointerEvent } }\n  | { type: 'pointerup', data: { position: Position, event: PointerEvent } }\n  | { type: 'noderesize', data: { id: string } & NodeResizeEventParams }\n  | { type: 'noderesized', data: { id: string } & NodeResizeEventParams }\n  | RenderSignal<'node', { payload: Schemes['Node'] }>\n  | RenderSignal<'connection', { payload: Schemes['Connection'], start?: Position, end?: Position }>\n  | { type: 'unmount', data: { element: HTMLElement } }\n  | { type: 'reordered', data: { element: HTMLElement } }\n\n/**\n * Base abstract class for area plugins that provides a common interface\n * @abstract\n */\nexport abstract class BaseAreaPlugin<Schemes extends BaseSchemes, Signals> extends Scope<Signals, [Root<Schemes>]> {\n  public abstract nodeViews: Map<NodeId, NodeView>\n  public abstract connectionViews: Map<ConnectionId, ConnectionView>\n  public abstract area: Area\n\n  abstract addNodeView(connection: Schemes['Node']): NodeView\n  abstract removeNodeView(connection: NodeId): void\n  abstract addConnectionView(connection: Schemes['Connection']): ConnectionView\n  abstract removeConnectionView(connection: ConnectionId): void\n  abstract update(type: GetRenderTypes<Signals>, id: string): Promise<void | boolean | undefined>\n  abstract resize(id: NodeId, width: number, height: number): Promise<void | boolean | undefined>\n  abstract translate(id: NodeId, position: Position): Promise<void | boolean | undefined>\n  abstract destroy(): void\n}\n","\ntype Events = {\n  contextmenu: (event: MouseEvent) => void\n}\n\nexport class ConnectionView {\n  element: HTMLElement\n\n  constructor(events: Events) {\n    this.element = document.createElement('div')\n\n    this.element.style.position = 'absolute'\n    this.element.style.left = '0'\n    this.element.style.top = '0'\n    this.element.addEventListener('contextmenu', event => events.contextmenu(event))\n  }\n}\n","\nexport class ElementsHolder<E extends HTMLElement, Ctx extends { type: string, element: E, payload?: { id: string } }> {\n  views = new WeakMap<E, Ctx>()\n  viewsElements = new Map<`${string}_${string}`, E>()\n\n  public set(context: Ctx) {\n    const { element, type, payload } = context\n\n    if (payload?.id) {\n      this.views.set(element, context)\n      this.viewsElements.set(`${type}_${payload.id}`, element)\n    }\n  }\n\n  public get(type: string, id: string) {\n    const element = this.viewsElements.get(`${type}_${id}`)\n\n    return element && this.views.get(element)\n  }\n\n  public delete(element: E) {\n    const view = this.views.get(element)\n\n    if (view && view.payload?.id) {\n      this.views.delete(element)\n      this.viewsElements.delete(`${view.type}_${view.payload.id}`)\n    }\n  }\n}\n","import { Drag } from './drag'\nimport { Position, Size } from './types'\n\nexport type NodeTranslateEventParams = { position: Position, previous: Position }\nexport type NodeResizeEventParams = { size: Size }\n\ntype Events = {\n  picked: () => void\n  translated: (params: NodeTranslateEventParams) => Promise<unknown>\n  dragged: () => void\n  contextmenu: (event: MouseEvent) => void\n  resized: (params: NodeResizeEventParams) => Promise<unknown>\n}\ntype Guards = {\n  resize: (params: NodeResizeEventParams) => Promise<unknown>\n  translate: (params: NodeTranslateEventParams) => Promise<unknown>\n}\n\nexport class NodeView {\n  element: HTMLElement\n  position: Position\n  dragHandler: Drag\n\n  constructor(private getZoom: () => number, private events: Events, private guards: Guards) {\n    this.element = document.createElement('div')\n    this.element.style.position = 'absolute'\n    this.position = { x: 0, y: 0 }\n    void this.translate(0, 0)\n\n    this.element.addEventListener('contextmenu', event => this.events.contextmenu(event))\n\n    this.dragHandler = new Drag()\n    this.dragHandler.initialize(\n      this.element,\n      {\n        getCurrentPosition: () => this.position,\n        getZoom: () => this.getZoom()\n      },\n      {\n        start: this.events.picked,\n        translate: this.translate,\n        drag: this.events.dragged\n      }\n    )\n  }\n  public translate = async (x: number, y: number) => {\n    type Params = undefined | { data: NodeTranslateEventParams }\n    const previous = { ...this.position }\n    const translation = await this.guards.translate({ previous, position: { x, y } }) as Params\n\n    if (!translation) return false\n\n    this.position = { ...translation.data.position }\n    this.element.style.transform = `translate(${this.position.x}px, ${this.position.y}px)`\n\n    await this.events.translated({ position: this.position, previous })\n\n    return true\n  }\n  public resize = async (width: number, height: number) => {\n    const size = { width, height }\n\n    if (!await this.guards.resize({ size })) return false\n\n    const el = this.element.querySelector('*:not(span):not([fragment])')\n\n    if (!el || !(el instanceof HTMLElement)) return false\n\n    el.style.width = `${width}px`\n    el.style.height = `${height}px`\n\n    await this.events.resized({ size })\n\n    return true\n  }\n\n  public destroy() {\n    this.dragHandler.destroy()\n  }\n}\n","import { BaseAreaPlugin } from '../../base'\nimport { NodeView } from '../../node-view'\nimport { SchemesWithSizes } from './types'\n\nexport function getNodesRect<S extends SchemesWithSizes, K>(nodes: S['Node'][], views: BaseAreaPlugin<S, K>['nodeViews']) {\n  return nodes\n    .map(node => ({ view: views.get(node.id) as NodeView, node }))\n    .filter(item => item.view)\n    .map(({ view, node }) => {\n      const { width, height } = node\n\n      if (typeof width !== 'undefined' && typeof height !== 'undefined') {\n        return {\n          position: view.position,\n          width,\n          height\n        }\n      }\n\n      return {\n        position: view.position,\n        width: view.element.clientWidth,\n        height: view.element.clientHeight\n      }\n    })\n}\n","import { BaseSchemes, GetSchemes, NodeEditor, NodeId } from 'rete'\n\nimport { BaseArea, BaseAreaPlugin } from '../base'\n\ntype Schemes = GetSchemes<BaseSchemes['Node'] & { selected?: boolean }, any>\n\n/**\n * Selector's accumulate function, activated when the ctrl key is pressed\n */\nexport function accumulateOnCtrl() {\n  let pressed = false\n\n  function keydown(e: KeyboardEvent) {\n    if (e.key === 'Control' || e.key === 'Meta') pressed = true\n  }\n  function keyup(e: KeyboardEvent) {\n    if (e.key === 'Control' || e.key === 'Meta') pressed = false\n  }\n\n  document.addEventListener('keydown', keydown)\n  document.addEventListener('keyup', keyup)\n\n  return {\n    active() {\n      return pressed\n    },\n    destroy() {\n      document.removeEventListener('keydown', keydown)\n      document.removeEventListener('keyup', keyup)\n    }\n  }\n}\n\nexport type SelectorEntity = { label: string, id: string, unselect(): void, translate(dx: number, dy: number): void }\n\n/**\n * Selector class. Used to collect selected entities (nodes, connections, etc.) and synchronize them (select, unselect, translate, etc.).\n * Can be extended to add custom functionality.\n */\nexport class Selector<E extends SelectorEntity> {\n  entities = new Map<string, E>()\n  pickId: string | null = null\n\n  isSelected(entity: Pick<E, 'label' | 'id'>) {\n    return this.entities.has(`${entity.label}_${entity.id}`)\n  }\n\n  add(entity: E, accumulate: boolean) {\n    if (!accumulate) this.unselectAll()\n    this.entities.set(`${entity.label}_${entity.id}`, entity)\n  }\n\n  remove(entity: Pick<E, 'label' | 'id'>) {\n    const id = `${entity.label}_${entity.id}`\n    const item = this.entities.get(id)\n\n    if (item) {\n      this.entities.delete(id)\n      item.unselect()\n    }\n  }\n\n  unselectAll() {\n    [...Array.from(this.entities.values())].forEach(item => this.remove(item))\n  }\n\n  translate(dx: number, dy: number) {\n    this.entities.forEach(item => !this.isPicked(item) && item.translate(dx, dy))\n  }\n\n  pick(entity: Pick<E, 'label' | 'id'>) {\n    this.pickId = `${entity.label}_${entity.id}`\n  }\n\n  release() {\n    this.pickId = null\n  }\n\n  isPicked(entity: Pick<E, 'label' | 'id'>) {\n    return this.pickId === `${entity.label}_${entity.id}`\n  }\n}\n\n/**\n * Selector factory, uses default Selector class\n * @returns Selector instance\n */\nexport function selector<E extends SelectorEntity>() {\n  return new Selector<E>()\n}\n\n/**\n * Accumulating interface, used to determine whether to accumulate entities on selection\n */\nexport type Accumulating = {\n  active(): boolean\n}\n\nexport type Selectable = ReturnType<typeof selector>\n\n/**\n * Selectable nodes extension. Adds the ability to select nodes in the area.\n * @param base BaseAreaPlugin instance\n * @param core Selectable instance\n * @param options.accumulating Accumulating interface\n * @listens nodepicked\n * @listens nodetranslated\n * @listens pointerdown\n * @listens pointermove\n * @listens pointerup\n */\nexport function selectableNodes<T>(base: BaseAreaPlugin<Schemes, T>, core: Selectable, options: { accumulating: Accumulating }) {\n  let editor: null | NodeEditor<Schemes> = null\n  const area = base as BaseAreaPlugin<Schemes, BaseArea<Schemes>>\n  const getEditor = () => editor || (editor = area.parentScope<NodeEditor<Schemes>>(NodeEditor))\n\n  let twitch: null | number = 0\n\n  function selectNode(node: Schemes['Node']) {\n    if (!node.selected) {\n      node.selected = true\n      void area.update('node', node.id)\n    }\n  }\n\n  function unselectNode(node: Schemes['Node']) {\n    if (node.selected) {\n      node.selected = false\n      void area.update('node', node.id)\n    }\n  }\n  /**\n   * Select node programmatically\n   * @param nodeId Node id\n   * @param accumulate Whether to accumulate nodes on selection\n   */\n  function add(nodeId: NodeId, accumulate: boolean) {\n    const node = getEditor().getNode(nodeId)\n\n    if (!node) return\n\n    core.add({\n      label: 'node',\n      id: node.id,\n      translate(dx, dy) {\n        const view = area.nodeViews.get(node.id)\n        const current = view?.position\n\n        if (current) {\n          void view.translate(current.x + dx, current.y + dy)\n        }\n      },\n      unselect() {\n        unselectNode(node)\n      }\n    }, accumulate)\n    selectNode(node)\n  }\n  /**\n   * Unselect node programmatically\n   * @param nodeId Node id\n   */\n  function remove(nodeId: NodeId) {\n    core.remove({ id: nodeId, label: 'node' })\n  }\n\n  // eslint-disable-next-line max-statements, complexity\n  area.addPipe(context => {\n    if (!context || typeof context !== 'object' || !('type' in context)) return context\n\n    if (context.type === 'nodepicked') {\n      const pickedId = context.data.id\n      const accumulate = options.accumulating.active()\n\n      core.pick({ id: pickedId, label: 'node' })\n      twitch = null\n      add(pickedId, accumulate)\n    } else if (context.type === 'nodetranslated') {\n      const { id, position, previous } = context.data\n      const dx = position.x - previous.x\n      const dy = position.y - previous.y\n\n      if (core.isPicked({ id, label: 'node' })) core.translate(dx, dy)\n    } else if (context.type === 'pointerdown') {\n      twitch = 0\n    } else if (context.type === 'pointermove') {\n      if (twitch !== null) twitch++\n    } else if (context.type === 'pointerup') {\n      if (twitch !== null && twitch < 4) {\n        core.unselectAll()\n      }\n      twitch = null\n    }\n    return context\n  })\n\n  return {\n    select: add,\n    unselect: remove\n  }\n}\n\n","import { NodeEditor } from 'rete'\n\nimport { AreaPlugin } from '..'\nimport { getBoundingBox } from '../utils'\nimport { NodeRef, SchemesWithSizes } from './shared/types'\nimport { getNodesRect } from './shared/utils'\n\n/**\n * Zoom extension parameters\n */\nexport type Params = {\n  /** Set gap between nodes and the viewport border */\n  scale?: number\n}\n\n/**\n * Zooms the area to fit the given nodes\n * @param plugin The area plugin\n * @param nodes The nodes to fit\n * @param params The zoom parameters\n */\n// eslint-disable-next-line max-statements, max-len\nexport async function zoomAt<Schemes extends SchemesWithSizes, K>(plugin: AreaPlugin<Schemes, K>, nodes: NodeRef<Schemes>[], params?: Params) {\n  const { scale = 0.9 } = params || {}\n  const editor = plugin.parentScope<NodeEditor<Schemes>>(NodeEditor)\n  const list = nodes.map(node => typeof node === 'object'\n    ? node\n    : editor.getNode(node))\n  const rects = getNodesRect(list, plugin.nodeViews)\n  const boundingBox = getBoundingBox(rects)\n  const [w, h] = [plugin.container.clientWidth, plugin.container.clientHeight]\n  const [kw, kh] = [w / boundingBox.width, h / boundingBox.height]\n  const k = Math.min(kh * scale, kw * scale, 1)\n\n  plugin.area.transform.x = w / 2 - boundingBox.center.x * k\n  plugin.area.transform.y = h / 2 - boundingBox.center.y * k\n  await plugin.area.zoom(k, 0, 0)\n}\n","import { BaseSchemes, NodeEditor } from 'rete'\n\nimport { BaseAreaPlugin } from '../base'\nimport { getBoundingBox as getBBox } from '../utils'\nimport { NodeRef } from './shared/types'\nimport { getNodesRect } from './shared/utils'\n\n/**\n * Get the bounding box of the given nodes\n * @param plugin The area plugin\n * @param nodes The nodes to get the bounding box of\n * @returns The bounding box\n */\nexport function getBoundingBox<Schemes extends BaseSchemes, K>(plugin: BaseAreaPlugin<Schemes, K>, nodes: NodeRef<Schemes>[]) {\n  const editor = plugin.parentScope<NodeEditor<Schemes>>(NodeEditor)\n  const list = nodes.map(node => typeof node === 'object'\n    ? node\n    : editor.getNode(node))\n  const rects = getNodesRect(list, plugin.nodeViews)\n\n  return getBBox(rects)\n}\n","import { BaseSchemes } from 'rete'\n\nimport { BaseArea, BaseAreaPlugin } from '../base'\n\n/**\n * Simple nodes order extension\n * @param base The base area plugin\n * @listens nodepicked\n * @listens connectioncreated\n */\nexport function simpleNodesOrder<Schemes extends BaseSchemes, T>(base: BaseAreaPlugin<Schemes, T>) {\n  const area = base as BaseAreaPlugin<Schemes, BaseArea<Schemes>>\n\n  area.addPipe(context => {\n    if (!context || typeof context !== 'object' || !('type' in context)) return context\n\n    if (context.type === 'nodepicked') {\n      const view = area.nodeViews.get(context.data.id)\n      const { content } = area.area\n\n      if (view) {\n        content.reorder(view.element, null)\n      }\n    }\n    if (context.type === 'connectioncreated') {\n      const view = area.connectionViews.get(context.data.id)\n      const { content } = area.area\n\n      if (view) {\n        content.reorder(view.element, content.holder.firstChild)\n      }\n    }\n    return context\n  })\n}\n","import { BaseSchemes } from 'rete'\n\nimport { AreaPlugin } from '..'\nimport { Position } from '../types'\n\ntype ScaleRange = { min: number, max: number }\ntype TranslateRange = { left: number, top: number, right: number, bottom: number }\n\n/**\n * Restrictor extension parameters\n */\nexport type Params = {\n  /** The scaling range */\n  scaling?: ScaleRange | (() => ScaleRange) | boolean\n  /** The translation range */\n  translation?: TranslateRange | (() => TranslateRange) | boolean\n}\n\n/**\n * Restrictor extension. Restricts the area zoom and position\n * @param plugin The area plugin\n * @param params The restrictor parameters\n * @listens zoom\n * @listens zoomed\n * @listens translated\n */\nexport function restrictor<Schemes extends BaseSchemes, K>(plugin: AreaPlugin<Schemes, K>, params?: Params) {\n  const scaling = params?.scaling\n    ? params.scaling === true\n      ? { min: 0.1, max: 1 }\n      : params.scaling\n    : false\n  const translation = params?.translation\n    ? params.translation === true\n      ? { left: 0, top: 0, right: 1000, bottom: 1000 }\n      : params.translation\n    : false\n\n  function restrictZoom(zoom: number) {\n    if (!scaling) throw new Error('scaling param isnt defined')\n    const { min, max } = typeof scaling === 'function'\n      ? scaling()\n      : scaling\n\n    if (zoom < min) {\n      return min\n    } else if (zoom > max) {\n      return max\n    }\n    return zoom\n  }\n\n  // eslint-disable-next-line max-statements\n  function restrictPosition(position: Position): Position {\n    if (!translation) throw new Error('translation param isnt defined')\n    const nextPosition = { ...position }\n    const { left, top, right, bottom } = typeof translation === 'function'\n      ? translation()\n      : translation\n\n    if (nextPosition.x < left) {\n      nextPosition.x = left\n    }\n    if (nextPosition.x > right) {\n      nextPosition.x = right\n    }\n    if (nextPosition.y < top) {\n      nextPosition.y = top\n    }\n    if (nextPosition.y > bottom) {\n      nextPosition.y = bottom\n    }\n\n    return nextPosition\n  }\n\n  plugin.addPipe(context => {\n    if (!context || typeof context !== 'object' || !('type' in context)) return context\n    if (scaling && context.type === 'zoom') {\n      return {\n        ...context,\n        data: {\n          ...context.data,\n          zoom: restrictZoom(context.data.zoom)\n        }\n      }\n    }\n    if (translation && context.type === 'zoomed') {\n      const position = restrictPosition(plugin.area.transform)\n\n      void plugin.area.translate(position.x, position.y)\n    }\n    if (translation && context.type === 'translate') {\n      return {\n        ...context,\n        data: {\n          ...context.data,\n          position: restrictPosition(context.data.position)\n        }\n      }\n    }\n    return context\n  })\n}\n","import { BaseSchemes, ClassicPreset as Classic, GetSchemes, NodeEditor } from 'rete'\n\nimport { BaseAreaPlugin } from '../base'\n\ntype Scheme = GetSchemes<Classic.Node, Classic.Connection<Classic.Node, Classic.Node>>\ntype Visible<S extends Scheme> = (props: { hasAnyConnection: boolean, input: NonNullable<S['Node']['inputs'][string]> }) => boolean\n\n/**\n * Show input control extension. It will show the input's control when there is no connection and hide it when there is a connection.\n * @param area The base area plugin\n * @param visible The visible function\n * @listens connectioncreated\n * @listens connectionremoved\n */\nexport function showInputControl<S extends Scheme>(area: BaseAreaPlugin<BaseSchemes, any>, visible?: Visible<S>) {\n  let editor: null | NodeEditor<S> = null\n  const getEditor = () => editor || (editor = area.parentScope<NodeEditor<S>>(NodeEditor))\n\n  function updateInputControlVisibility(target: string, targetInput: string) {\n    const node = getEditor().getNode(target)\n\n    if (!node) return\n\n    const input = (node.inputs as Record<string, S['Node']['inputs'][string] | undefined>)[targetInput]\n\n    if (!input) throw new Error('cannot find input')\n\n    const previous = input.showControl\n    const connections = getEditor().getConnections()\n    const hasAnyConnection = Boolean(connections.find(connection => {\n      return connection.target === target && connection.targetInput === targetInput\n    }))\n\n    input.showControl = visible\n      ? visible({ hasAnyConnection, input })\n      : !hasAnyConnection\n\n    if (input.showControl !== previous) {\n      void area.update('node', node.id)\n    }\n  }\n\n  area.addPipe(context => {\n    if (context.type === 'connectioncreated' || context.type === 'connectionremoved') {\n      updateInputControlVisibility(context.data.target, context.data.targetInput)\n    }\n    return context\n  })\n}\n","import { BaseSchemes } from 'rete'\n\nimport { BaseArea, BaseAreaPlugin } from '../base'\n\n/**\n * Snap grid extension parameters\n */\nexport type Params = {\n  /** The grid size */\n  size?: number\n  /** Whether to snap on node drag */\n  dynamic?: boolean\n}\n\n/**\n * Snap grid extension\n * @param base The base area plugin\n * @param params The snap parameters\n * @listens nodetranslate\n * @listens nodedragged\n */\nexport function snapGrid<Schemes extends BaseSchemes, K>(base: BaseAreaPlugin<Schemes, K>, params?: Params) {\n  const area = base as BaseAreaPlugin<Schemes, BaseArea<Schemes>>\n  const size = typeof params?.size === 'undefined'\n    ? 16\n    : params.size\n  const dynamic = typeof params?.dynamic === 'undefined'\n    ? true\n    : params.dynamic\n\n  function snap(value: number) {\n    return Math.round(value / size) * size\n  }\n\n  area.addPipe(context => {\n    if (!context || typeof context !== 'object' || !('type' in context)) return context\n    if (dynamic && context.type === 'nodetranslate') {\n      const { position } = context.data\n      const x = snap(position.x)\n      const y = snap(position.y)\n\n      return {\n        ...context,\n        data: {\n          ...context.data,\n          position: { x, y }\n        }\n      }\n    }\n    if (!dynamic && context.type === 'nodedragged') {\n      const view = area.nodeViews.get(context.data.id)\n\n      if (view) {\n        const { x, y } = view.position\n\n        void view.translate(snap(x), snap(y))\n      }\n    }\n    return context\n  })\n}\n","import { BaseSchemes, ConnectionId, NodeId, Root } from 'rete'\n\nimport { Area, TranslateEventParams, ZoomEventParams } from './area'\nimport { BaseArea, BaseAreaPlugin } from './base'\nimport { ConnectionView } from './connection-view'\nimport { ElementsHolder } from './elements-holder'\nimport { NodeView } from './node-view'\nimport { GetRenderTypes, Position, RenderMeta } from './types'\n\nexport { Area } from './area'\nexport type { BaseArea } from './base'\nexport { BaseAreaPlugin } from './base'\nexport { Drag } from './drag'\nexport * as AreaExtensions from './extensions'\nexport { NodeView } from './node-view'\nexport type { RenderSignal } from './types'\nexport type { PointerListener } from './utils'\nexport { usePointerListener } from './utils'\nexport { Zoom } from './zoom'\n\n/**\n * A union of all possible signals that can be emitted by the area\n * @priority 9\n */\nexport type Area2D<Schemes extends BaseSchemes> =\n  | BaseArea<Schemes>\n  | { type: 'translate', data: TranslateEventParams }\n  | { type: 'translated', data: TranslateEventParams }\n  | { type: 'zoom', data: ZoomEventParams }\n  | { type: 'zoomed', data: ZoomEventParams }\n  | { type: 'resized', data: { event: Event } }\n\nexport type Area2DInherited<Schemes extends BaseSchemes, ExtraSignals = never> = [Area2D<Schemes> | ExtraSignals, Root<Schemes>]\n\n/**\n * A plugin that provides a 2D area for nodes and connections\n * @priority 8\n * @emits render\n * @emits rendered\n * @emits unmount\n * @listens nodecreated\n * @listens noderemoved\n * @listens connectioncreated\n * @listens connectionremoved\n */\nexport class AreaPlugin<Schemes extends BaseSchemes, ExtraSignals = never> extends BaseAreaPlugin<Schemes, Area2D<Schemes> | ExtraSignals> {\n  public nodeViews = new Map<NodeId, NodeView>()\n  public connectionViews = new Map<ConnectionId, ConnectionView>()\n  public area: Area\n  private elements = new ElementsHolder<HTMLElement, Extract<Area2D<Schemes>, { type: 'render' }>['data'] & RenderMeta>()\n\n  constructor(public container: HTMLElement) {\n    super('area')\n    container.style.overflow = 'hidden'\n    container.addEventListener('contextmenu', this.onContextMenu)\n\n    // eslint-disable-next-line max-statements\n    this.addPipe(context => {\n      if (!context || !(typeof context === 'object' && 'type' in context)) return context\n      if (context.type === 'nodecreated') {\n        this.addNodeView(context.data)\n      }\n      if (context.type === 'noderemoved') {\n        this.removeNodeView(context.data.id)\n      }\n      if (context.type === 'connectioncreated') {\n        this.addConnectionView(context.data)\n      }\n      if (context.type === 'connectionremoved') {\n        this.removeConnectionView(context.data.id)\n      }\n      if (context.type === 'render') {\n        this.elements.set(context.data)\n      }\n      if (context.type === 'unmount') {\n        this.elements.delete(context.data.element)\n      }\n      return context\n    })\n    this.area = new Area(\n      container,\n      {\n        zoomed: params => this.emit({ type: 'zoomed', data: params }),\n        pointerDown: (position, event) => void this.emit({ type: 'pointerdown', data: { position, event } }),\n        pointerMove: (position, event) => void this.emit({ type: 'pointermove', data: { position, event } }),\n        pointerUp: (position, event) => void this.emit({ type: 'pointerup', data: { position, event } }),\n        resize: event => void this.emit({ type: 'resized', data: { event } }),\n        translated: params => this.emit({ type: 'translated', data: params }),\n        reordered: element => this.emit({ type: 'reordered', data: { element } })\n      },\n      {\n        translate: params => this.emit({ type: 'translate', data: params }),\n        zoom: params => this.emit({ type: 'zoom', data: params })\n      }\n    )\n  }\n\n  private onContextMenu = (event: MouseEvent) => {\n    void this.emit({ type: 'contextmenu', data: { event, context: 'root' } })\n  }\n\n  public addNodeView(node: Schemes['Node']) {\n    const { id } = node\n    const view = new NodeView(\n      () => this.area.transform.k,\n      {\n        picked: () => void this.emit({ type: 'nodepicked', data: { id } }),\n        translated: data => this.emit({ type: 'nodetranslated', data: { id, ...data } }),\n        dragged: () => void this.emit({ type: 'nodedragged', data: node }),\n        contextmenu: event => void this.emit({ type: 'contextmenu', data: { event, context: node } }),\n        resized: ({ size }) => this.emit({ type: 'noderesized', data: { id: node.id, size } })\n      },\n      {\n        translate: data => this.emit({ type: 'nodetranslate', data: { id, ...data } }),\n        resize: ({ size }) => this.emit({ type: 'noderesize', data: { id: node.id, size } })\n      }\n    )\n\n    this.nodeViews.set(id, view)\n    this.area.content.add(view.element)\n\n    void this.emit({\n      type: 'render',\n      data: { element: view.element, type: 'node', payload: node }\n    })\n\n    return view\n  }\n\n  public removeNodeView(id: NodeId) {\n    const view = this.nodeViews.get(id)\n\n    if (view) {\n      void this.emit({ type: 'unmount', data: { element: view.element } })\n      this.nodeViews.delete(id)\n      this.area.content.remove(view.element)\n    }\n  }\n\n  public addConnectionView(connection: Schemes['Connection']) {\n    const view = new ConnectionView({\n      contextmenu: event => void this.emit({ type: 'contextmenu', data: { event, context: connection } })\n    })\n\n    this.connectionViews.set(connection.id, view)\n    this.area.content.add(view.element)\n\n    void this.emit({\n      type: 'render',\n      data: { element: view.element, type: 'connection', payload: connection }\n    })\n\n    return view\n  }\n\n  public removeConnectionView(id: ConnectionId) {\n    const view = this.connectionViews.get(id)\n\n    if (view) {\n      void this.emit({ type: 'unmount', data: { element: view.element } })\n      this.connectionViews.delete(id)\n      this.area.content.remove(view.element)\n    }\n  }\n\n  /**\n   * Force update rendered element by id (node, connection, etc.)\n   * @param type Element type\n   * @param id Element id\n   * @emits render\n   */\n  public async update(type: GetRenderTypes<Area2D<Schemes>> | GetRenderTypes<ExtraSignals>, id: string) {\n    const data = this.elements.get(type, id)\n\n    if (data) await this.emit({ type: 'render', data } as Area2D<Schemes>)\n  }\n\n  /**\n   * Resize node\n   * @param id Node id\n   * @param width Desired width\n   * @param height Desired height\n   */\n  public async resize(id: NodeId, width: number, height: number) {\n    const view = this.nodeViews.get(id)\n\n    if (view) return await view.resize(width, height)\n  }\n\n  /**\n   * Translate node to position\n   * @param id Node id\n   * @param position Position\n   */\n  public async translate(id: NodeId, { x, y }: Position) {\n    const view = this.nodeViews.get(id)\n\n    if (view) return await view.translate(x, y)\n  }\n\n  /**\n   * Destroy all views and remove all event listeners\n   */\n  public destroy() {\n    this.container.removeEventListener('contextmenu', this.onContextMenu)\n    Array.from(this.connectionViews.keys()).forEach(id => this.removeConnectionView(id))\n    Array.from(this.nodeViews.keys()).forEach(id => this.removeNodeView(id))\n    this.area.destroy()\n  }\n}\n"],"names":["Content","_createClass","reordered","_classCallCheck","this","holder","document","createElement","style","transformOrigin","key","value","event","_this$holder$getBound","getBoundingClientRect","left","top","x","clientX","y","clientY","element","appendChild","_reorder","_asyncToGenerator","_regeneratorRuntime","mark","_callee","target","next","wrap","_context","prev","contains","Error","insertBefore","stop","_x","_x2","apply","arguments","removeChild","usePointerListener","handlers","move","up","window","removeEventListener","down","addEventListener","destroy","min","arr","length","Math","_toConsumableArray","max","getBoundingBox","rects","map","rect","position","right","width","bottom","height","abs","center","Drag","guards","_this","_defineProperty","e","stopPropagation","pointerStart","pageX","pageY","startPosition","_objectSpread","config","getCurrentPosition","events","start","preventDefault","delta","zoom","getZoom","translate","drag","pointerType","button","touchAction","pointerListener","Zoom","intensity","_this$element$getBoun","deltaY","ox","oy","onzoom","pointers","push","p","pointerId","isTranslating","_this$element$getBoun2","_this$getTouches","getTouches","cx","cy","distance","previous","filter","_this$element$getBoun3","container","wheel","dblclick","contextmenu","touches","_ref","x1","y1","_ref2","x2","y2","sqrt","pow","Area","k","setPointerFrom","pointerDown","pointer","pointerMove","pointerUp","resize","_this$zoomHandler","zoomHandler","source","transform","update","content","setZoomHandler","setDragHandler","pointerdown","pointermove","pointerup","_this$transform","concat","_this2","dragHandler","initialize","onTranslate","onZoom","_this$content$getPoin","getPointerFrom","_translate","result","sent","abrupt","data","translated","_zoom2","_callee2","d","_args2","_context2","undefined","zoomed","_x3","innerHTML","BaseAreaPlugin","_Scope","_callSuper","_inherits","Scope","ConnectionView","ElementsHolder","WeakMap","Map","context","type","payload","id","views","set","viewsElements","get","_view$payload","view","NodeView","translation","size","el","querySelector","HTMLElement","resized","_x4","picked","dragged","getNodesRect","nodes","node","item","clientWidth","clientHeight","Selector","entity","entities","has","label","accumulate","unselectAll","unselect","Array","from","values","forEach","remove","dx","dy","isPicked","pickId","_zoomAt","plugin","params","_ref$scale","scale","editor","list","boundingBox","w","h","kw","kh","parentScope","NodeEditor","_typeof","getNode","nodeViews","area","getBBox","base","addPipe","reorder","connectionViews","firstChild","scaling","restrictZoom","restrictPosition","nextPosition","pressed","keydown","keyup","active","core","options","twitch","add","nodeId","current","selected","unselectNode","selectNode","pickedId","accumulating","pick","_context$data","select","visible","getEditor","targetInput","input","inputs","showControl","connections","getConnections","hasAnyConnection","Boolean","find","connection","updateInputControlVisibility","dynamic","snap","round","_view$position","AreaPlugin","_BaseAreaPlugin","emit","overflow","onContextMenu","addNodeView","removeNodeView","addConnectionView","removeConnectionView","elements","_this3","_update","_resize","_x5","_callee3","_ref3","_context3","_x6","_x7","_this4","keys"],"mappings":";;;;;myUAAA,IAAaA,EAAO,WAMjB,OAAAC,GAHD,SAAAD,EAAoBE,GAAsDC,OAAAH,GAAAI,KAAtDF,UAAAA,EAClBE,KAAKC,OAASC,SAASC,cAAc,OACrCH,KAAKC,OAAOG,MAAMC,gBAAkB,KACtC,GAAC,CAAA,CAAAC,IAAA,iBAAAC,MAED,SAAsBC,GACpB,IAAAC,EAAsBT,KAAKC,OAAOS,wBAA1BC,EAAIF,EAAJE,KAAMC,EAAGH,EAAHG,IAId,MAAO,CAAEC,EAHCL,EAAMM,QAAUH,EAGdI,EAFFP,EAAMQ,QAAUJ,EAG5B,GAAC,CAAAN,IAAA,MAAAC,MAED,SAAIU,GACFjB,KAAKC,OAAOiB,YAAYD,EAC1B,GAEA,CAAAX,IAAA,UAAAC,OAAAY,EAAAC,EAAAC,IAAAC,MACA,SAAAC,EAAcC,EAAqBC,GAAsB,OAAAJ,IAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAF,MAAA,KAAA,EAAA,GAClDzB,KAAKC,OAAO4B,SAASL,GAAO,CAAAG,EAAAF,KAAA,EAAA,KAAA,CAAA,MACzB,IAAIK,MAAK,gDAAgD,KAAA,EAAA,GAEpD,OAATL,GAAkBzB,KAAKC,OAAO4B,SAASJ,GAAK,CAAAE,EAAAF,KAAA,EAAA,KAAA,CAAA,MACxC,IAAIK,MAAK,8CAA8C,KAAA,EAGzB,OAAtC9B,KAAKC,OAAO8B,aAAaP,EAAQC,GAAKE,EAAAF,KAAA,EAChCzB,KAAKF,UAAU0B,GAAO,KAAA,EAAA,IAAA,MAAA,OAAAG,EAAAK,OAAA,GAAAT,EAAAvB,KAC7B,KAAA,SAVYiC,EAAAC,GAAA,OAAAf,EAAAgB,MAAAnC,KAAAoC,UAAA,IAAA,CAAA9B,IAAA,SAAAC,MAYb,SAAOU,GACDjB,KAAKC,OAAO4B,SAASZ,IACvBjB,KAAKC,OAAOoC,YAAYpB,EAE5B,KAjBA,IAAAE,CAiBC,CArCiB,GCeb,SAASmB,EAAmBrB,EAAsBsB,GACvD,IAAMC,EAAuB,SAAAhC,GAC3B+B,EAASC,KAAKhC,IAEViC,EAAqB,SAAAjC,GACzBkC,OAAOC,oBAAoB,cAAeH,GAC1CE,OAAOC,oBAAoB,YAAaF,GACxCC,OAAOC,oBAAoB,gBAAiBF,GAC5CF,EAASE,GAAGjC,IAERoC,EAAuB,SAAApC,GAC3BkC,OAAOG,iBAAiB,cAAeL,GACvCE,OAAOG,iBAAiB,YAAaJ,GACrCC,OAAOG,iBAAiB,gBAAiBJ,GACzCF,EAASK,KAAKpC,IAKhB,OAFAS,EAAQ4B,iBAAiB,cAAeD,GAEjC,CACLE,QAAO,WACL7B,EAAQ0B,oBAAoB,cAAeC,GAC3CF,OAAOC,oBAAoB,cAAeH,GAC1CE,OAAOC,oBAAoB,YAAaF,GACxCC,OAAOC,oBAAoB,gBAAiBF,EAC9C,EAEJ,CAKA,IAAMM,EAAM,SAACC,GAAa,OAAoB,IAAfA,EAAIC,OAC/B,EACAC,KAAKH,IAAGZ,MAARe,KAAIC,EAAQH,GAAI,EACdI,EAAM,SAACJ,GAAa,OAAoB,IAAfA,EAAIC,OAC/B,EACAC,KAAKE,IAAGjB,MAARe,KAAIC,EAAQH,GAAI,EAEb,SAASK,EAAeC,GAC7B,IAAM3C,EAAOoC,EAAIO,EAAMC,KAAI,SAAAC,GAAI,OAAIA,EAAKC,SAAS5C,CAAC,KAC5CD,EAAMmC,EAAIO,EAAMC,KAAI,SAAAC,GAAI,OAAIA,EAAKC,SAAS1C,CAAC,KAC3C2C,EAAQN,EAAIE,EAAMC,KAAI,SAAAC,GAAI,OAAIA,EAAKC,SAAS5C,EAAI2C,EAAKG,KAAK,KAC1DC,EAASR,EAAIE,EAAMC,KAAI,SAAAC,GAAI,OAAIA,EAAKC,SAAS1C,EAAIyC,EAAKK,MAAM,KAElE,MAAO,CACLlD,KAAAA,EACA+C,MAAAA,EACA9C,IAAAA,EACAgD,OAAAA,EACAD,MAAOT,KAAKY,IAAInD,EAAO+C,GACvBG,OAAQX,KAAKY,IAAIlD,EAAMgD,GACvBG,OAAQ,CACNlD,GAAIF,EAAO+C,GAAS,EACpB3C,GAAIH,EAAMgD,GAAU,GAG1B,CClDaI,IAAAA,EAAI,WAad,OAAAnE,GALD,SAAAmE,EAAYC,GAAiB,IAAAC,EAAAlE,KAAAD,OAAAiE,GAAAG,EAAAnE,KAAA,QAkBd,SAACoE,GACTF,EAAKD,OAAOrB,KAAKwB,KAEtBA,EAAEC,kBACFH,EAAKI,aAAe,CAAEzD,EAAGuD,EAAEG,MAAOxD,EAAGqD,EAAEI,OACvCN,EAAKO,cAAaC,EAAQR,CAAAA,EAAAA,EAAKS,OAAOC,sBAEtCV,EAAKW,OAAOC,MAAMV,OACnBD,EAAAnE,KAAA,QAEc,SAACoE,GACd,GAAKF,EAAKI,cAAiBJ,EAAKO,eAC3BP,EAAKD,OAAOzB,KAAK4B,GAAtB,CACAA,EAAEW,iBAEF,IAAMC,EACDZ,EAAEG,MAAQL,EAAKI,aAAazD,EAD3BmE,EAEDZ,EAAEI,MAAQN,EAAKI,aAAavD,EAE3BkE,EAAOf,EAAKS,OAAOO,UACnBrE,EAAIqD,EAAKO,cAAc5D,EAAImE,EAAUC,EACrClE,EAAImD,EAAKO,cAAc1D,EAAIiE,EAAUC,EAEtCf,EAAKW,OAAOM,UAAUtE,EAAGE,EAAGqD,EAXP,KAY3BD,EAAAnE,KAAA,MAEY,SAACoE,GACPF,EAAKI,sBAEHJ,EAAKI,aACZJ,EAAKW,OAAOO,KAAKhB,OA/CjBpE,KAAKiE,OAASA,GAAU,CACtBrB,KAAM,SAAAwB,GAAC,QAAwB,UAAlBA,EAAEiB,aAAwC,IAAbjB,EAAEkB,OAAa,EACzD9C,KAAM,WAAF,OAAQ,CAAI,EAEpB,GAAC,CAAA,CAAAlC,IAAA,aAAAC,MAED,SAAkBU,EAAsB0D,EAAoBE,GAC1D7E,KAAK2E,OAASA,EACd3E,KAAK6E,OAASA,EACd5D,EAAQb,MAAMmF,YAAc,OAC5BvF,KAAKwF,gBAAkBlD,EAAmBrB,EAAS,CACjD2B,KAAM5C,KAAK4C,KACXJ,KAAMxC,KAAKwC,KACXC,GAAIzC,KAAKyC,IAEb,GAAC,CAAAnC,IAAA,UAAAC,MAmCD,WACEP,KAAKwF,gBAAgB1C,SACvB,IAAC,CA7Dc,GCXJ2C,EAAI,WAO6B,OAAA5F,GAA5C,SAAA4F,EAAsBC,GAAmB,IAAAxB,EAAAlE,KAAAD,OAAA0F,GAAAtB,kBANiC,MAAIA,kBACzC,IAAEA,EAAAnE,KAAA,SAqBrB,SAACoE,GACjBA,EAAEW,iBAEF,IAAAY,EAAsBzB,EAAKjD,QAAQP,wBAA3BC,EAAIgF,EAAJhF,KAAMC,EAAG+E,EAAH/E,IAERoE,EADaZ,EAAEwB,OAAS,EAE1B1B,EAAKwB,WACJxB,EAAKwB,UACJG,GAAMlF,EAAOyD,EAAEtD,SAAWkE,EAC1Bc,GAAMlF,EAAMwD,EAAEpD,SAAWgE,EAE/Bd,EAAK6B,OAAOf,EAAOa,EAAIC,EAAI,YAC5B3B,EAAAnE,KAAA,QAgBgB,SAACoE,GAChBF,EAAK8B,SAASC,KAAK7B,MACpBD,EAAAnE,KAAA,QAEgB,SAACoE,GAIhB,GAHAF,EAAK8B,SAAW9B,EAAK8B,SAASzC,KAAI,SAAA2C,GAAC,OAAIA,EAAEC,YAAc/B,EAAE+B,UACrD/B,EACA8B,KACChC,EAAKkC,gBAAV,CAEA,IAAAC,EAAsBnC,EAAKjD,QAAQP,wBAA3BC,EAAI0F,EAAJ1F,KAAMC,EAAGyF,EAAHzF,IACd0F,EAA6BpC,EAAKqC,aAA1BC,EAAEF,EAAFE,GAAIC,EAAEH,EAAFG,GAAIC,EAAQJ,EAARI,SAEhB,GAAsB,OAAlBxC,EAAKyC,UAAqBzC,EAAKyC,SAASD,SAAW,EAAG,CACxD,IAAM1B,EAAQ0B,EAAWxC,EAAKyC,SAASD,SAAW,EAE5Cb,GAAMlF,EAAO6F,GAAMxB,EACnBc,GAAMlF,EAAM6F,GAAMzB,EAExBd,EAAK6B,OAAOf,EAAOa,GAAM3B,EAAKyC,SAASH,GAAKA,GAAKV,GAAM5B,EAAKyC,SAASF,GAAKA,GAAK,QACjF,CACAvC,EAAKyC,SAAW,CAAEH,GAAAA,EAAIC,GAAAA,EAAIC,SAAAA,EAbC,KAc5BvC,sBAEuB,WACtBD,EAAK8B,SAAW,MACjB7B,EAAAnE,KAAA,MAEc,SAACoE,GACdF,EAAKyC,SAAW,KAChBzC,EAAK8B,SAAW9B,EAAK8B,SAASY,QAAO,SAAAV,GAAC,OAAIA,EAAEC,YAAc/B,EAAE+B,gBAC7DhC,EAAAnE,KAAA,YAEoB,SAACoE,GACpBA,EAAEW,iBAEF,IAAA8B,EAAsB3C,EAAKjD,QAAQP,wBAA3BC,EAAIkG,EAAJlG,KAAMC,EAAGiG,EAAHjG,IACRoE,EAAQ,EAAId,EAAKwB,UAEjBG,GAAMlF,EAAOyD,EAAEtD,SAAWkE,EAC1Bc,GAAMlF,EAAMwD,EAAEpD,SAAWgE,EAE/Bd,EAAK6B,OAAOf,EAAOa,EAAIC,EAAI,eAC5B9F,KAvFqB0F,UAAAA,CAAqB,GAAC,CAAA,CAAApF,IAAA,aAAAC,MAE5C,SAAkBuG,EAAwB7F,EAAsB8E,GAC9D/F,KAAK8G,UAAYA,EACjB9G,KAAKiB,QAAUA,EACfjB,KAAK+F,OAASA,EACd/F,KAAK8G,UAAUjE,iBAAiB,QAAS7C,KAAK+G,OAC9C/G,KAAK8G,UAAUjE,iBAAiB,cAAe7C,KAAK4C,MACpD5C,KAAK8G,UAAUjE,iBAAiB,WAAY7C,KAAKgH,UAEjDtE,OAAOG,iBAAiB,cAAe7C,KAAKwC,MAC5CE,OAAOG,iBAAiB,YAAa7C,KAAKyC,IAC1CC,OAAOG,iBAAiB,gBAAiB7C,KAAKyC,IAC9CC,OAAOG,iBAAiB,cAAe7C,KAAKiH,YAC9C,GAAC,CAAA3G,IAAA,aAAAC,MAgBD,WACE,IAAM6D,EAAI,CAAE8C,QAASlH,KAAKgG,UAC1BmB,EAAiB,CAAC/C,EAAE8C,QAAQ,GAAGpG,QAASsD,EAAE8C,QAAQ,GAAGlG,SAA9CoG,EAAED,EAAA,GAAEE,EAAEF,EAAA,GACbG,EAAiB,CAAClD,EAAE8C,QAAQ,GAAGpG,QAASsD,EAAE8C,QAAQ,GAAGlG,SAA9CuG,EAAED,EAAA,GAAEE,EAAEF,EAAA,GAIb,MAAO,CACLd,IAAKY,EAAKG,GAAM,EAChBd,IAAKY,EAAKG,GAAM,EAChBd,SALexD,KAAKuE,KAAKvE,KAAKwE,IAAIN,EAAKG,EAAI,GAAKrE,KAAKwE,IAAIL,EAAKG,EAAI,IAOtE,GAAC,CAAAlH,IAAA,gBAAAC,MA+CD,WACE,OAAOP,KAAKgG,SAAS/C,QAAU,CACjC,GAAC,CAAA3C,IAAA,UAAAC,MAED,WACEP,KAAK8G,UAAUnE,oBAAoB,QAAS3C,KAAK+G,OACjD/G,KAAK8G,UAAUnE,oBAAoB,cAAe3C,KAAK4C,MACvD5C,KAAK8G,UAAUnE,oBAAoB,WAAY3C,KAAKgH,UAEpDtE,OAAOC,oBAAoB,cAAe3C,KAAKwC,MAC/CE,OAAOC,oBAAoB,YAAa3C,KAAKyC,IAC7CC,OAAOC,oBAAoB,gBAAiB3C,KAAKyC,IACjDC,OAAOC,oBAAoB,cAAe3C,KAAKiH,YACjD,IAAC,CA7Gc,GCYJU,EAAI,WAsBd,OAAA9H,GAdD,SAAA8H,EAAoBb,EAAgCjC,EAAwBZ,GAAgB,IAAAC,EAAAlE,KAAAD,OAAA4H,GAAAxD,EAP9DnE,KAAA,YAAA,CAAE4H,EAAG,EAAG/G,EAAG,EAAGE,EAAG,IAAGoD,EACvBnE,KAAA,UAAA,CAAEa,EAAG,EAAGE,EAAG,IAAGoD,qBAGN,MAAIA,qBACJ,MAAIA,EAAAnE,KAAA,eAgEjB,SAACQ,GACrB0D,EAAK2D,eAAerH,GACpB0D,EAAKW,OAAOiD,YAAY5D,EAAK6D,QAASvH,MACvC2D,EAAAnE,KAAA,eAEqB,SAACQ,GACrB0D,EAAK2D,eAAerH,GACpB0D,EAAKW,OAAOmD,YAAY9D,EAAK6D,QAASvH,MACvC2D,EAAAnE,KAAA,aAEmB,SAACQ,GACnB0D,EAAK2D,eAAerH,GACpB0D,EAAKW,OAAOoD,UAAU/D,EAAK6D,QAASvH,MACrC2D,EAAAnE,KAAA,UAEgB,SAACQ,GAChB0D,EAAKW,OAAOqD,OAAO1H,MACpB2D,EAEqBnE,KAAA,eAAA,SAACa,EAAWE,GAAc,IAAAoH,EAC1BA,QAApBA,EAAIjE,EAAKkE,mBAALD,IAAgBA,GAAhBA,EAAkB/B,iBACjBlC,EAAKiB,UAAUtE,EAAGE,MACxBoD,EAAAnE,KAAA,UAEgB,SAACgF,EAAea,EAAYC,EAAYuC,GAClDnE,EAAKe,KAAKf,EAAKoE,UAAUV,GAAK,EAAI5C,GAAQa,EAAIC,EAAIuC,GAEvDnE,EAAKqE,YACNvI,KA1FmB8G,UAAAA,EAAsB9G,KAAU6E,OAAAA,EAAc7E,KAAUiE,OAAAA,EAC1EjE,KAAKwI,QAAU,IAAI5I,GAAQ,SAAAqB,GAAO,OAAIiD,EAAKW,OAAO/E,UAAUmB,MAC5DjB,KAAKwI,QAAQvI,OAAOG,MAAMC,gBAAkB,MAE5CL,KAAKyI,eAAe,IAAIhD,EAAK,KAC7BzF,KAAK0I,eAAe,IAAI1E,GAExBhE,KAAK8G,UAAUjE,iBAAiB,cAAe7C,KAAK2I,aACpD3I,KAAK8G,UAAUjE,iBAAiB,cAAe7C,KAAK4I,aACpDlG,OAAOG,iBAAiB,YAAa7C,KAAK6I,WAC1CnG,OAAOG,iBAAiB,SAAU7C,KAAKkI,QAEvCpB,EAAU5F,YAAYlB,KAAKwI,QAAQvI,QACnCD,KAAKuI,QACP,GAAC,CAAA,CAAAjI,IAAA,SAAAC,MAED,WACE,IAAAuI,EAAoB9I,KAAKsI,UAAjBzH,EAACiI,EAADjI,EAAGE,EAAC+H,EAAD/H,EAAG6G,EAACkB,EAADlB,EAEd5H,KAAKwI,QAAQvI,OAAOG,MAAMkI,UAASS,aAAAA,OAAgBlI,EAAC,QAAAkI,OAAOhI,gBAACgI,OAAanB,EAAI,IAC/E,GAEA,CAAAtH,IAAA,iBAAAC,MAKA,SAAsB6E,GAAmB,IAAA4D,EAAAhJ,KACnCA,KAAKiJ,aAAajJ,KAAKiJ,YAAYnG,UACvC9C,KAAKiJ,YAAc7D,EACfpF,KAAKiJ,aAAajJ,KAAKiJ,YAAYC,WACrClJ,KAAK8G,UACL,CACElC,mBAAoB,WAAF,OAAQoE,EAAKV,SAAS,EACxCpD,QAAS,WAAF,OAAQ,CAAC,GAElB,CACEJ,MAAO,WAAF,OAAQ,IAAI,EACjBK,UAAWnF,KAAKmJ,YAChB/D,KAAM,WAAF,OAAQ,IAAI,GAGtB,GAEA,CAAA9E,IAAA,iBAAAC,MAKA,SAAsB0E,GAChBjF,KAAKoI,aAAapI,KAAKoI,YAAYtF,UACvC9C,KAAKoI,YAAcnD,EACfjF,KAAKoI,aAAapI,KAAKoI,YAAYc,WAAWlJ,KAAK8G,UAAW9G,KAAKwI,QAAQvI,OAAQD,KAAKoJ,OAC9F,GAAC,CAAA9I,IAAA,iBAAAC,MAED,SAAsBC,GACpB,IAAA6I,EAAiBrJ,KAAKwI,QAAQc,eAAe9I,GAArCK,EAACwI,EAADxI,EAAGE,EAACsI,EAADtI,EACH6G,EAAM5H,KAAKsI,UAAXV,EAER5H,KAAK+H,QAAU,CAAElH,EAAGA,EAAI+G,EAAG7G,EAAGA,EAAI6G,EACpC,GAAC,CAAAtH,IAAA,YAAAC,OAgCDgJ,EAAAnI,EAAAC,IAAAC,MAQA,SAAAC,EAAuBV,EAAWE,GAAS,IAAA0C,EAAA+F,EAAA,OAAAnI,IAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAF,MAAA,KAAA,EAEhB,OAAnBgC,EAAW,CAAE5C,EAAAA,EAAGE,EAAAA,GAAGY,EAAAF,KAAA,EACJzB,KAAKiE,OAAOkB,UAAU,CAAEwB,SAAU3G,KAAKsI,UAAW7E,SAAAA,IAAW,KAAA,EAAtE,GAAN+F,EAAM7H,EAAA8H,KAED,CAAA9H,EAAAF,KAAA,EAAA,KAAA,CAAA,OAAAE,EAAA+H,OAAA,UAAS,GAAK,KAAA,EAKZ,OAHb1J,KAAKsI,UAAUzH,EAAI2I,EAAOG,KAAKlG,SAAS5C,EACxCb,KAAKsI,UAAUvH,EAAIyI,EAAOG,KAAKlG,SAAS1C,EAExCf,KAAKuI,SAAQ5G,EAAAF,KAAA,GAEPzB,KAAK6E,OAAO+E,WAAWJ,EAAOG,MAAK,KAAA,GAAA,OAAAhI,EAAA+H,OAAA,UAClC,GAAI,KAAA,GAAA,IAAA,MAAA,OAAA/H,EAAAK,OAAA,GAAAT,EAAAvB,KACZ,KAAA,SAdqBiC,EAAAC,GAAA,OAAAqH,EAAApH,MAAAnC,KAAAoC,UAAA,IAgBtB,CAAA9B,IAAA,OAAAC,OAAAsJ,EAAAzI,EAAAC,IAAAC,MAUA,SAAAwI,EAAkB7E,GAAY,IAAAY,EAAAC,EAAAuC,EAAAT,EAAA4B,EAAAO,EAAAC,EAAA5H,UAAA,OAAAf,IAAAK,MAAA,SAAAuI,GAAA,cAAAA,EAAArI,KAAAqI,EAAAxI,MAAA,KAAA,EAEF,OAFIoE,EAAEmE,EAAA/G,OAAA,QAAAiH,IAAAF,EAAA,GAAAA,EAAA,GAAG,EAAGlE,EAAEkE,EAAA/G,OAAA,QAAAiH,IAAAF,EAAA,GAAAA,EAAA,GAAG,EAAG3B,EAAmB2B,EAAA/G,OAAA+G,EAAAA,UAAAE,EAE3DtC,EAAI5H,KAAKsI,UAAUV,EAACqC,EAAAxI,KAAA,EACLzB,KAAKiE,OAAOgB,KAAK,CAAE0B,SAAU3G,KAAKsI,UAAWrD,KAAAA,EAAMoD,OAAAA,IAAS,KAAA,EAArE,GAANmB,EAAMS,EAAAR,KAED,CAAAQ,EAAAxI,KAAA,EAAA,KAAA,CAAA,OAAAwI,EAAAP,OAAA,UAAS,GAAI,KAAA,EAQX,OANPK,GAAKnC,EAAI4B,EAAOG,KAAK1E,OAAS2C,EAAI3C,GAAQ,GAEhDjF,KAAKsI,UAAUV,EAAI4B,EAAOG,KAAK1E,MAAQ,EACvCjF,KAAKsI,UAAUzH,GAAKgF,EAAKkE,EACzB/J,KAAKsI,UAAUvH,GAAK+E,EAAKiE,EAEzB/J,KAAKuI,SAAQ0B,EAAAxI,KAAA,GAEPzB,KAAK6E,OAAOsF,OAAOX,EAAOG,MAAK,KAAA,GAAA,OAAAM,EAAAP,OAAA,UAC9B,GAAK,KAAA,GAAA,IAAA,MAAA,OAAAO,EAAAjI,OAAA,GAAA8H,EAAA9J,KACb,KAAA,SAjBgBoK,GAAA,OAAAP,EAAA1H,MAAAnC,KAAAoC,UAAA,IAAA,CAAA9B,IAAA,UAAAC,MAmBjB,WACEP,KAAK8G,UAAUnE,oBAAoB,cAAe3C,KAAK2I,aACvD3I,KAAK8G,UAAUnE,oBAAoB,cAAe3C,KAAK4I,aACvDlG,OAAOC,oBAAoB,YAAa3C,KAAK6I,WAC7CnG,OAAOC,oBAAoB,SAAU3C,KAAKkI,QACtClI,KAAKiJ,aAAajJ,KAAKiJ,YAAYnG,UACnC9C,KAAKoI,aAAapI,KAAKoI,YAAYtF,UACvC9C,KAAKwI,QAAQvI,OAAOoK,UAAY,EAClC,KArCA,IAAAR,EAxBAN,CA6DC,CAjKc,GC+BKe,WAAcC,GAAA,SAAAD,IAAA,OAAAvK,OAAAuK,GAAAE,EAAAxK,KAAAsK,EAAAlI,UAAA,CAAA,OAAAqI,EAAAH,EAAAC,GAAA1K,EAAAyK,EAAA,EAA+CI,EAAKA,OCjD3EC,EAAc9K,GAGzB,SAAA8K,EAAY9F,GAAgB9E,OAAA4K,GAC1B3K,KAAKiB,QAAUf,SAASC,cAAc,OAEtCH,KAAKiB,QAAQb,MAAMqD,SAAW,WAC9BzD,KAAKiB,QAAQb,MAAMO,KAAO,IAC1BX,KAAKiB,QAAQb,MAAMQ,IAAM,IACzBZ,KAAKiB,QAAQ4B,iBAAiB,eAAe,SAAArC,GAAK,OAAIqE,EAAOoC,YAAYzG,KAC3E,ICdWoK,EAAc,WAE0B,OAAA/K,GAF1B,SAAA+K,IAAA7K,OAAA6K,GAAAzG,EACjBnE,KAAA,QAAA,IAAI6K,SAAiB1G,EACbnE,KAAA,gBAAA,IAAI8K,IAA+B,GAAA,CAAA,CAAAxK,IAAA,MAAAC,MAEnD,SAAWwK,GACT,IAAQ9J,EAA2B8J,EAA3B9J,QAAS+J,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,QAEnBA,SAAAA,EAASC,KACXlL,KAAKmL,MAAMC,IAAInK,EAAS8J,GACxB/K,KAAKqL,cAAcD,IAAG,GAAArC,OAAIiC,EAAIjC,KAAAA,OAAIkC,EAAQC,IAAMjK,GAEpD,GAAC,CAAAX,IAAA,MAAAC,MAED,SAAWyK,EAAcE,GACvB,IAAMjK,EAAUjB,KAAKqL,cAAcC,IAAG,GAAAvC,OAAIiC,EAAIjC,KAAAA,OAAImC,IAElD,OAAOjK,GAAWjB,KAAKmL,MAAMG,IAAIrK,EACnC,GAAC,CAAAX,IAAA,SAAAC,MAED,SAAcU,GAAY,IAAAsK,EAClBC,EAAOxL,KAAKmL,MAAMG,IAAIrK,GAExBuK,GAAoB,QAAhBD,EAAIC,EAAKP,eAAO,IAAAM,GAAZA,EAAcL,KACxBlL,KAAKmL,MAAY,OAAClK,GAClBjB,KAAKqL,cAAa,UAAOtC,OAAIyC,EAAKR,KAAIjC,KAAAA,OAAIyC,EAAKP,QAAQC,KAE3D,IAAC,CA1BwB,GCiBdO,EAAQ,WA0BlB,OAAA5L,GArBD,SAAA4L,EAAoBvG,EAA+BL,EAAwBZ,GAAgB,IAAAC,EAAAlE,KAAAD,OAAA0L,GAAAtH,EAAAnE,KAAA,YAAA,WAAA,IAAAmH,EAAA/F,EAAAC,IAAAC,MAsBxE,SAAAC,EAAOV,EAAWE,GAAS,IAAA4F,EAAA+E,EAAA,OAAArK,IAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAF,MAAA,KAAA,EAET,OAA7BkF,EAAQjC,EAAQR,CAAAA,EAAAA,EAAKT,UAAQ9B,EAAAF,KAAA,EACTyC,EAAKD,OAAOkB,UAAU,CAAEwB,SAAAA,EAAUlD,SAAU,CAAE5C,EAAAA,EAAGE,EAAAA,KAAM,KAAA,EAAhE,GAAX2K,EAAW/J,EAAA8H,KAED,CAAA9H,EAAAF,KAAA,EAAA,KAAA,CAAA,OAAAE,EAAA+H,OAAA,UAAS,GAAK,KAAA,EAGwD,OADtFxF,EAAKT,SAAQiB,EAAA,CAAA,EAAQgH,EAAY/B,KAAKlG,UACtCS,EAAKjD,QAAQb,MAAMkI,UAAS,aAAAS,OAAgB7E,EAAKT,SAAS5C,UAACkI,OAAO7E,EAAKT,SAAS1C,EAAM,OAAAY,EAAAF,KAAA,GAEhFyC,EAAKW,OAAO+E,WAAW,CAAEnG,SAAUS,EAAKT,SAAUkD,SAAAA,IAAW,KAAA,GAAA,OAAAhF,EAAA+H,OAAA,UAE5D,GAAI,KAAA,GAAA,IAAA,MAAA,OAAA/H,EAAAK,OAAA,GAAAT,EACZ,KAAA,OAAAU,SAAAA,EAAAC,GAAA,OAAAiF,EAAAhF,MAAAnC,KAAAoC,UAAA,CAAA,CAnC0F,IAmC1F+B,EAAAnE,KAAA,SAAA,WAAA,IAAAsH,EAAAlG,EAAAC,IAAAC,MACe,SAAAwI,EAAOnG,EAAeE,GAAc,IAAA8H,EAAAC,EAAA,OAAAvK,IAAAK,MAAA,SAAAuI,GAAA,cAAAA,EAAArI,KAAAqI,EAAAxI,MAAA,KAAA,EACpB,OAAxBkK,EAAO,CAAEhI,MAAAA,EAAOE,OAAAA,GAAQoG,EAAAxI,KAAA,EAEnByC,EAAKD,OAAOiE,OAAO,CAAEyD,KAAAA,IAAO,KAAA,EAAA,GAAA1B,EAAAR,KAAA,CAAAQ,EAAAxI,KAAA,EAAA,KAAA,CAAA,OAAAwI,EAAAP,OAAA,UAAS,GAAK,KAAA,EAEe,IAA9DkC,EAAK1H,EAAKjD,QAAQ4K,cAAc,iCAEzBD,aAAcE,YAAY,CAAA7B,EAAAxI,KAAA,EAAA,KAAA,CAAA,OAAAwI,EAAAP,OAAA,UAAS,GAAK,KAAA,EAGtB,OAD/BkC,EAAGxL,MAAMuD,SAAKoF,OAAMpF,EAAS,MAC7BiI,EAAGxL,MAAMyD,UAAMkF,OAAMlF,EAAU,MAAAoG,EAAAxI,KAAA,GAEzByC,EAAKW,OAAOkH,QAAQ,CAAEJ,KAAAA,IAAO,KAAA,GAAA,OAAA1B,EAAAP,OAAA,UAE5B,GAAI,KAAA,GAAA,IAAA,MAAA,OAAAO,EAAAjI,OAAA,GAAA8H,EACZ,KAAA,OAAAM,SAAAA,EAAA4B,GAAA,OAAA1E,EAAAnF,MAAAnC,KAAAoC,UAAA,CAAA,CAhBA,IAgBApC,KAnDmBkF,QAAAA,EAAqBlF,KAAU6E,OAAAA,EAAc7E,KAAUiE,OAAAA,EACzEjE,KAAKiB,QAAUf,SAASC,cAAc,OACtCH,KAAKiB,QAAQb,MAAMqD,SAAW,WAC9BzD,KAAKyD,SAAW,CAAE5C,EAAG,EAAGE,EAAG,GACtBf,KAAKmF,UAAU,EAAG,GAEvBnF,KAAKiB,QAAQ4B,iBAAiB,eAAe,SAAArC,GAAK,OAAI0D,EAAKW,OAAOoC,YAAYzG,MAE9ER,KAAKiJ,YAAc,IAAIjF,EACvBhE,KAAKiJ,YAAYC,WACflJ,KAAKiB,QACL,CACE2D,mBAAoB,WAAF,OAAQV,EAAKT,QAAQ,EACvCyB,QAAS,WAAF,OAAQhB,EAAKgB,SAAS,GAE/B,CACEJ,MAAO9E,KAAK6E,OAAOoH,OACnB9G,UAAWnF,KAAKmF,UAChBC,KAAMpF,KAAK6E,OAAOqH,SAGxB,GAAC,CAAA,CAAA5L,IAAA,UAAAC,MAgCD,WACEP,KAAKiJ,YAAYnG,SACnB,IAAC,CA5DkB,GCdd,SAASqJ,EAA4CC,EAAoBjB,GAC9E,OAAOiB,EACJ7I,KAAI,SAAA8I,GAAI,MAAK,CAAEb,KAAML,EAAMG,IAAIe,EAAKnB,IAAiBmB,KAAAA,EAAM,IAC3DzF,QAAO,SAAA0F,GAAI,OAAIA,EAAKd,IAAI,IACxBjI,KAAI,SAAA4D,GAAoB,IAAjBqE,EAAIrE,EAAJqE,KAAMa,EAAIlF,EAAJkF,KACJ1I,EAAkB0I,EAAlB1I,MAAOE,EAAWwI,EAAXxI,OAEf,YAAqB,IAAVF,QAA2C,IAAXE,EAClC,CACLJ,SAAU+H,EAAK/H,SACfE,MAAAA,EACAE,OAAAA,GAIG,CACLJ,SAAU+H,EAAK/H,SACfE,MAAO6H,EAAKvK,QAAQsL,YACpB1I,OAAQ2H,EAAKvK,QAAQuL,aAEzB,GACJ,CCcA,IAAaC,EAAQ,WAES,OAAA5M,GAFT,SAAA4M,IAAA1M,OAAA0M,GAAAtI,EACRnE,KAAA,WAAA,IAAI8K,KAAgB3G,gBACP,KAAI,GAAA,CAAA,CAAA7D,IAAA,aAAAC,MAE5B,SAAWmM,GACT,OAAO1M,KAAK2M,SAASC,IAAG,GAAA7D,OAAI2D,EAAOG,WAAK9D,OAAI2D,EAAOxB,IACrD,GAAC,CAAA5K,IAAA,MAAAC,MAED,SAAImM,EAAWI,GACRA,GAAY9M,KAAK+M,cACtB/M,KAAK2M,SAASvB,IAAGrC,GAAAA,OAAI2D,EAAOG,MAAK,KAAA9D,OAAI2D,EAAOxB,IAAMwB,EACpD,GAAC,CAAApM,IAAA,SAAAC,MAED,SAAOmM,GACL,IAAMxB,EAAE,GAAAnC,OAAM2D,EAAOG,MAAK,KAAA9D,OAAI2D,EAAOxB,IAC/BoB,EAAOtM,KAAK2M,SAASrB,IAAIJ,GAE3BoB,IACFtM,KAAK2M,SAAe,OAACzB,GACrBoB,EAAKU,WAET,GAAC,CAAA1M,IAAA,cAAAC,MAED,WAAc,IAAA2D,EAAAlE,KACZmD,EAAI8J,MAAMC,KAAKlN,KAAK2M,SAASQ,WAAWC,SAAQ,SAAAd,GAAI,OAAIpI,EAAKmJ,OAAOf,KACtE,GAAC,CAAAhM,IAAA,YAAAC,MAED,SAAU+M,EAAYC,GAAY,IAAAvE,EAAAhJ,KAChCA,KAAK2M,SAASS,SAAQ,SAAAd,GAAI,OAAKtD,EAAKwE,SAASlB,IAASA,EAAKnH,UAAUmI,EAAIC,KAC3E,GAAC,CAAAjN,IAAA,OAAAC,MAED,SAAKmM,GACH1M,KAAKyN,OAAM1E,GAAAA,OAAM2D,EAAOG,MAAK,KAAA9D,OAAI2D,EAAOxB,GAC1C,GAAC,CAAA5K,IAAA,UAAAC,MAED,WACEP,KAAKyN,OAAS,IAChB,GAAC,CAAAnN,IAAA,WAAAC,MAED,SAASmM,GACP,OAAO1M,KAAKyN,SAAM,GAAA1E,OAAQ2D,EAAOG,WAAK9D,OAAI2D,EAAOxB,GACnD,IAAC,CAzCkB,GCFpB,SAAAwC,IAAA,OAAAA,EAAAtM,EAAAC,IAAAC,MAfM,SAAAC,EAA2DoM,EAAgCvB,EAA2BwB,GAAe,IAAAC,EAAAC,EAAAC,EAAAC,EAAA1K,EAAA2K,EAAA3G,EAAA4G,EAAAC,EAAAC,EAAAC,EAAAzG,EAAA,OAAAvG,IAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAF,MAAA,KAAA,EAahF,OAZtBoM,GAAZD,GAAU,IAA1BE,MAAAA,OAAQ,IAAHD,EAAG,GAAGA,EACbE,EAASJ,EAAOW,YAAiCC,EAAAA,YACjDP,EAAO5B,EAAM7I,KAAI,SAAA8I,GAAI,MAAoB,WAAhBmC,EAAOnC,GAClCA,EACA0B,EAAOU,QAAQpC,MACb/I,EAAQ6I,EAAa6B,EAAML,EAAOe,WAClCT,EAAc5K,EAAeC,GAAMgE,EAC1B,CAACqG,EAAO7G,UAAUyF,YAAaoB,EAAO7G,UAAU0F,cAArD2B,EAAC7G,EAAA,GACJ8G,GADAF,EAAC5G,EAAA,IACc2G,EAAYtK,MAAvB0K,EAA8BF,EAAIF,EAAYpK,OACnD+D,EAAI1E,KAAKH,IAAIsL,EAAKP,EAAOM,EAAKN,EAAO,GAE3CH,EAAOgB,KAAKrG,UAAUzH,EAAIqN,EAAI,EAAID,EAAYlK,OAAOlD,EAAI+G,EACzD+F,EAAOgB,KAAKrG,UAAUvH,EAAIoN,EAAI,EAAIF,EAAYlK,OAAOhD,EAAI6G,EAACjG,EAAAF,KAAA,GACpDkM,EAAOgB,KAAK1J,KAAK2C,EAAG,EAAG,GAAE,KAAA,GAAA,IAAA,MAAA,OAAAjG,EAAAK,OAAA,GAAAT,EAChC,MAAAY,MAAAnC,KAAAoC,UAAA,oDCxBM,SAAwDuL,EAAoCvB,GACjG,IAAM2B,EAASJ,EAAOW,YAAiCC,EAAUA,YAMjE,OAAOK,EAFOzC,EAHDC,EAAM7I,KAAI,SAAA8I,GAAI,MAAoB,WAAhBmC,EAAOnC,GAClCA,EACA0B,EAAOU,QAAQpC,MACcsB,EAAOe,WAG1C,mBCXO,SAA0DG,GAC/D,IAAMF,EAAOE,EAEbF,EAAKG,SAAQ,SAAA/D,GACX,IAAKA,GAA8B,WAAnByD,EAAOzD,MAA0B,SAAUA,GAAU,OAAOA,EAE5E,GAAqB,eAAjBA,EAAQC,KAAuB,CACjC,IAAMQ,EAAOmD,EAAKD,UAAUpD,IAAIP,EAAQpB,KAAKuB,IACrC1C,EAAYmG,EAAKA,KAAjBnG,QAEJgD,GACFhD,EAAQuG,QAAQvD,EAAKvK,QAAS,KAElC,CACA,GAAqB,sBAAjB8J,EAAQC,KAA8B,CACxC,IAAMQ,EAAOmD,EAAKK,gBAAgB1D,IAAIP,EAAQpB,KAAKuB,IAC3C1C,EAAYmG,EAAKA,KAAjBnG,QAEJgD,GACFhD,EAAQuG,QAAQvD,EAAKvK,QAASuH,EAAQvI,OAAOgP,WAEjD,CACA,OAAOlE,CACT,GACF,aCRO,SAAoD4C,EAAgCC,GACzF,IAAMsB,IAAUtB,UAAAA,EAAQsB,YACD,IAAnBtB,EAAOsB,QACL,CAAEnM,IAAK,GAAKK,IAAK,GACjBwK,EAAOsB,SAEPxD,IAAckC,UAAAA,EAAQlC,gBACD,IAAvBkC,EAAOlC,YACL,CAAE/K,KAAM,EAAGC,IAAK,EAAG8C,MAAO,IAAME,OAAQ,KACxCgK,EAAOlC,aAGb,SAASyD,EAAalK,GACpB,IAAKiK,EAAS,MAAM,IAAIpN,MAAM,8BAC9B,IAAAqF,EAAwC,mBAAZ+H,EACxBA,IACAA,EAFInM,EAAGoE,EAAHpE,IAAKK,EAAG+D,EAAH/D,IAIb,OAAI6B,EAAOlC,EACFA,EACEkC,EAAO7B,EACTA,EAEF6B,CACT,CAGA,SAASmK,EAAiB3L,GACxB,IAAKiI,EAAa,MAAM,IAAI5J,MAAM,kCAClC,IAAMuN,EAAY3K,EAAA,CAAA,EAAQjB,GAC1B6D,EAA4D,mBAAhBoE,EACxCA,IACAA,EAFI/K,EAAI2G,EAAJ3G,KAAMC,EAAG0G,EAAH1G,IAAK8C,EAAK4D,EAAL5D,MAAOE,EAAM0D,EAAN1D,OAiB1B,OAbIyL,EAAaxO,EAAIF,IACnB0O,EAAaxO,EAAIF,GAEf0O,EAAaxO,EAAI6C,IACnB2L,EAAaxO,EAAI6C,GAEf2L,EAAatO,EAAIH,IACnByO,EAAatO,EAAIH,GAEfyO,EAAatO,EAAI6C,IACnByL,EAAatO,EAAI6C,GAGZyL,CACT,CAEA1B,EAAOmB,SAAQ,SAAA/D,GACb,IAAKA,GAA8B,WAAnByD,EAAOzD,MAA0B,SAAUA,GAAU,OAAOA,EAC5E,GAAImE,GAA4B,SAAjBnE,EAAQC,KACrB,OAAAtG,EAAAA,EAAA,CAAA,EACKqG,GAAO,CAAA,EAAA,CACVpB,KAAIjF,EAAAA,EACCqG,CAAAA,EAAAA,EAAQpB,MAAI,GAAA,CACf1E,KAAMkK,EAAapE,EAAQpB,KAAK1E,UAItC,GAAIyG,GAAgC,WAAjBX,EAAQC,KAAmB,CAC5C,IAAMvH,EAAW2L,EAAiBzB,EAAOgB,KAAKrG,WAEzCqF,EAAOgB,KAAKxJ,UAAU1B,EAAS5C,EAAG4C,EAAS1C,EAClD,CACA,OAAI2K,GAAgC,cAAjBX,EAAQC,KACzBtG,EAAAA,EAAA,CAAA,EACKqG,GAAO,CAAA,EAAA,CACVpB,KAAIjF,EAAAA,EACCqG,CAAAA,EAAAA,EAAQpB,MAAI,GAAA,CACflG,SAAU2L,EAAiBrE,EAAQpB,KAAKlG,cAIvCsH,CACT,GACF,mBJ9FO,WACL,IAAIuE,GAAU,EAEd,SAASC,EAAQnL,GACD,YAAVA,EAAE9D,KAA+B,SAAV8D,EAAE9D,MAAgBgP,GAAU,EACzD,CACA,SAASE,EAAMpL,GACC,YAAVA,EAAE9D,KAA+B,SAAV8D,EAAE9D,MAAgBgP,GAAU,EACzD,CAKA,OAHApP,SAAS2C,iBAAiB,UAAW0M,GACrCrP,SAAS2C,iBAAiB,QAAS2M,GAE5B,CACLC,OAAM,WACJ,OAAOH,CACR,EACDxM,QAAO,WACL5C,SAASyC,oBAAoB,UAAW4M,GACxCrP,SAASyC,oBAAoB,QAAS6M,EACxC,EAEJ,kBAgFO,SAA4BX,EAAkCa,EAAkBC,GACrF,IAAI5B,EAAqC,KACnCY,EAAOE,EAGTe,EAAwB,EAoB5B,SAASC,EAAIC,EAAgBhD,GAC3B,IAAMT,GAvBgB0B,IAAWA,EAASY,EAAKL,YAAiCC,EAAAA,cAuBvDE,QAAQqB,GAE5BzD,IAELqD,EAAKG,IAAI,CACPhD,MAAO,OACP3B,GAAImB,EAAKnB,GACT/F,mBAAUmI,EAAIC,GACZ,IAAM/B,EAAOmD,EAAKD,UAAUpD,IAAIe,EAAKnB,IAC/B6E,EAAUvE,aAAAA,EAAAA,EAAM/H,SAElBsM,GACGvE,EAAKrG,UAAU4K,EAAQlP,EAAIyM,EAAIyC,EAAQhP,EAAIwM,EAEnD,EACDP,SAAQ,YA3BZ,SAAsBX,GAChBA,EAAK2D,WACP3D,EAAK2D,UAAW,EACXrB,EAAKpG,OAAO,OAAQ8D,EAAKnB,IAElC,CAuBM+E,CAAa5D,EACf,GACCS,GArCL,SAAoBT,GACbA,EAAK2D,WACR3D,EAAK2D,UAAW,EACXrB,EAAKpG,OAAO,OAAQ8D,EAAKnB,IAElC,CAiCEgF,CAAW7D,GACb,CAuCA,OA7BAsC,EAAKG,SAAQ,SAAA/D,GACX,IAAKA,GAA8B,WAAnByD,EAAOzD,MAA0B,SAAUA,GAAU,OAAOA,EAE5E,GAAqB,eAAjBA,EAAQC,KAAuB,CACjC,IAAMmF,EAAWpF,EAAQpB,KAAKuB,GACxB4B,EAAa6C,EAAQS,aAAaX,SAExCC,EAAKW,KAAK,CAAEnF,GAAIiF,EAAUtD,MAAO,SACjC+C,EAAS,KACTC,EAAIM,EAAUrD,EAChB,MAAO,GAAqB,mBAAjB/B,EAAQC,KAA2B,CAC5C,IAAAsF,EAAmCvF,EAAQpB,KAAnCuB,EAAEoF,EAAFpF,GAAIzH,EAAQ6M,EAAR7M,SAAUkD,EAAQ2J,EAAR3J,SAChB2G,EAAK7J,EAAS5C,EAAI8F,EAAS9F,EAC3B0M,EAAK9J,EAAS1C,EAAI4F,EAAS5F,EAE7B2O,EAAKlC,SAAS,CAAEtC,GAAAA,EAAI2B,MAAO,UAAW6C,EAAKvK,UAAUmI,EAAIC,EAC/D,KAA4B,gBAAjBxC,EAAQC,KACjB4E,EAAS,EACiB,gBAAjB7E,EAAQC,KACF,OAAX4E,GAAiBA,IACK,cAAjB7E,EAAQC,OACF,OAAX4E,GAAmBA,EAAS,GAC9BF,EAAK3C,cAEP6C,EAAS,MAEX,OAAO7E,CACT,IAEO,CACLwF,OAAQV,EACR7C,SApCF,SAAgB8C,GACdJ,EAAKrC,OAAO,CAAEnC,GAAI4E,EAAQjD,MAAO,QACnC,EAoCF,sBAjHO,WACL,OAAO,IAAIJ,CACb,mBK3EO,SAA4CkC,EAAwC6B,GACzF,IAAIzC,EAA+B,KAC7B0C,EAAY,WAAH,OAAS1C,IAAWA,EAASY,EAAKL,YAA2BC,EAAAA,YAAY,EA0BxFI,EAAKG,SAAQ,SAAA/D,GAIX,MAHqB,sBAAjBA,EAAQC,MAAiD,sBAAjBD,EAAQC,MAzBtD,SAAsCxJ,EAAgBkP,GACpD,IAAMrE,EAAOoE,IAAYhC,QAAQjN,GAEjC,GAAK6K,EAAL,CAEA,IAAMsE,EAAStE,EAAKuE,OAAmEF,GAEvF,IAAKC,EAAO,MAAM,IAAI7O,MAAM,qBAE5B,IAAM6E,EAAWgK,EAAME,YACjBC,EAAcL,IAAYM,iBAC1BC,EAAmBC,QAAQH,EAAYI,MAAK,SAAAC,GAChD,OAAOA,EAAW3P,SAAWA,GAAU2P,EAAWT,cAAgBA,CACnE,KAEDC,EAAME,YAAcL,EAChBA,EAAQ,CAAEQ,iBAAAA,EAAkBL,MAAAA,KAC3BK,EAEDL,EAAME,cAAgBlK,GACnBgI,EAAKpG,OAAO,OAAQ8D,EAAKnB,GAjBrB,CAmBb,CAIIkG,CAA6BrG,EAAQpB,KAAKnI,OAAQuJ,EAAQpB,KAAK+G,aAE1D3F,CACT,GACF,WC3BO,SAAkD8D,EAAkCjB,GACzF,IAAMe,EAAOE,EACPlD,OAA+B,KAAjBiC,aAAAA,EAAAA,EAAQjC,MACxB,GACAiC,EAAOjC,KACL0F,OAAqC,KAApBzD,aAAAA,EAAAA,EAAQyD,UAE3BzD,EAAOyD,QAEX,SAASC,EAAK/Q,GACZ,OAAO2C,KAAKqO,MAAMhR,EAAQoL,GAAQA,CACpC,CAEAgD,EAAKG,SAAQ,SAAA/D,GACX,IAAKA,GAA8B,WAAnByD,EAAOzD,MAA0B,SAAUA,GAAU,OAAOA,EAC5E,GAAIsG,GAA4B,kBAAjBtG,EAAQC,KAA0B,CAC/C,IAAQvH,EAAasH,EAAQpB,KAArBlG,SACF5C,EAAIyQ,EAAK7N,EAAS5C,GAClBE,EAAIuQ,EAAK7N,EAAS1C,GAExB,OAAA2D,EAAAA,EAAA,CAAA,EACKqG,GAAO,CAAA,EAAA,CACVpB,KAAIjF,EAAAA,EACCqG,CAAAA,EAAAA,EAAQpB,MAAI,GAAA,CACflG,SAAU,CAAE5C,EAAAA,EAAGE,EAAAA,MAGrB,CACA,IAAKsQ,GAA4B,gBAAjBtG,EAAQC,KAAwB,CAC9C,IAAMQ,EAAOmD,EAAKD,UAAUpD,IAAIP,EAAQpB,KAAKuB,IAE7C,GAAIM,EAAM,CACR,IAAAgG,EAAiBhG,EAAK/H,SAAd5C,EAAC2Q,EAAD3Q,EAAGE,EAACyQ,EAADzQ,EAENyK,EAAKrG,UAAUmM,EAAKzQ,GAAIyQ,EAAKvQ,GACpC,CACF,CACA,OAAOgK,CACT,GACF,SLtCA,SAA4B9I,EAAAC,EAAAkI,GAAA,OAAAsD,EAAAvL,MAAAnC,KAAAoC,UAAA,IMuBfqP,WAAUC,GAMrB,SAAAD,EAAmB3K,GAAwB,IAAA5C,EA2CxC,OA3CwCnE,OAAA0R,GAC5BtN,EAAbD,EAAAsG,EAAAiH,KAAAA,GAAM,SAAO,YANI,IAAI3G,KAAuB3G,EAAAD,EAAA,kBACrB,IAAI4G,KAAmC3G,EAAAD,EAAA,WAE7C,IAAI0G,GAAgGzG,EAAAD,EAgD/F,iBAAA,SAAC1D,GAClB0D,EAAKyN,KAAK,CAAE3G,KAAM,cAAerB,KAAM,CAAEnJ,MAAAA,EAAOuK,QAAS,aAC/D7G,EAhDkB4C,UAAAA,EAEjBA,EAAU1G,MAAMwR,SAAW,SAC3B9K,EAAUjE,iBAAiB,cAAeqB,EAAK2N,eAG/C3N,EAAK4K,SAAQ,SAAA/D,GACX,OAAKA,GAAgC,WAAnByD,EAAOzD,IAAwB,SAAUA,GACtC,gBAAjBA,EAAQC,MACV9G,EAAK4N,YAAY/G,EAAQpB,MAEN,gBAAjBoB,EAAQC,MACV9G,EAAK6N,eAAehH,EAAQpB,KAAKuB,IAEd,sBAAjBH,EAAQC,MACV9G,EAAK8N,kBAAkBjH,EAAQpB,MAEZ,sBAAjBoB,EAAQC,MACV9G,EAAK+N,qBAAqBlH,EAAQpB,KAAKuB,IAEpB,WAAjBH,EAAQC,MACV9G,EAAKgO,SAAS9G,IAAIL,EAAQpB,MAEP,YAAjBoB,EAAQC,MACV9G,EAAKgO,SAAe,OAACnH,EAAQpB,KAAK1I,SAE7B8J,GAnBqEA,CAoB9E,IACA7G,EAAKyK,KAAO,IAAIhH,EACdb,EACA,CACEqD,OAAQ,SAAAyD,GAAM,OAAI1J,EAAKyN,KAAK,CAAE3G,KAAM,SAAUrB,KAAMiE,GAAS,EAC7D9F,YAAa,SAACrE,EAAUjD,GAAe0D,EAAKyN,KAAK,CAAE3G,KAAM,cAAerB,KAAM,CAAElG,SAAAA,EAAUjD,MAAAA,IAAU,EACpGwH,YAAa,SAACvE,EAAUjD,GAAe0D,EAAKyN,KAAK,CAAE3G,KAAM,cAAerB,KAAM,CAAElG,SAAAA,EAAUjD,MAAAA,IAAU,EACpGyH,UAAW,SAACxE,EAAUjD,GAAe0D,EAAKyN,KAAK,CAAE3G,KAAM,YAAarB,KAAM,CAAElG,SAAAA,EAAUjD,MAAAA,IAAU,EAChG0H,OAAQ,SAAA1H,GAAc0D,EAAKyN,KAAK,CAAE3G,KAAM,UAAWrB,KAAM,CAAEnJ,MAAAA,IAAU,EACrEoJ,WAAY,SAAAgE,GAAM,OAAI1J,EAAKyN,KAAK,CAAE3G,KAAM,aAAcrB,KAAMiE,GAAS,EACrE9N,UAAW,SAAAmB,GAAO,OAAIiD,EAAKyN,KAAK,CAAE3G,KAAM,YAAarB,KAAM,CAAE1I,QAAAA,IAAY,GAE3E,CACEkE,UAAW,SAAAyI,GAAM,OAAI1J,EAAKyN,KAAK,CAAE3G,KAAM,YAAarB,KAAMiE,GAAS,EACnE3I,KAAM,SAAA2I,GAAM,OAAI1J,EAAKyN,KAAK,CAAE3G,KAAM,OAAQrB,KAAMiE,GAAS,IAE5D1J,CACH,CAAC,OAAAuG,EAAAgH,EAAAC,GAAA7R,EAAA4R,EAAA,CAAA,CAAAnR,IAAA,cAAAC,MAMD,SAAmB8L,GAAuB,IAAArD,EAAAhJ,KAChCkL,EAAOmB,EAAPnB,GACFM,EAAO,IAAIC,GACf,WAAA,OAAMzC,EAAK2F,KAAKrG,UAAUV,IAC1B,CACEqE,OAAQ,WAAWjD,EAAK2I,KAAK,CAAE3G,KAAM,aAAcrB,KAAM,CAAEuB,GAAAA,IAAO,EAClEtB,WAAY,SAAAD,GAAI,OAAIX,EAAK2I,KAAK,CAAE3G,KAAM,iBAAkBrB,KAAIjF,EAAA,CAAIwG,GAAAA,GAAOvB,IAAS,EAChFuC,QAAS,WAAWlD,EAAK2I,KAAK,CAAE3G,KAAM,cAAerB,KAAM0C,GAAO,EAClEpF,YAAa,SAAAzG,GAAcwI,EAAK2I,KAAK,CAAE3G,KAAM,cAAerB,KAAM,CAAEnJ,MAAAA,EAAOuK,QAASsB,IAAS,EAC7FN,QAAS,SAAF5E,GAAA,IAAKwE,EAAIxE,EAAJwE,KAAI,OAAO3C,EAAK2I,KAAK,CAAE3G,KAAM,cAAerB,KAAM,CAAEuB,GAAImB,EAAKnB,GAAIS,KAAAA,IAAS,GAExF,CACExG,UAAW,SAAAwE,GAAI,OAAIX,EAAK2I,KAAK,CAAE3G,KAAM,gBAAiBrB,KAAIjF,EAAA,CAAIwG,GAAAA,GAAOvB,IAAS,EAC9EzB,OAAQ,SAAFZ,GAAA,IAAKqE,EAAIrE,EAAJqE,KAAI,OAAO3C,EAAK2I,KAAK,CAAE3G,KAAM,aAAcrB,KAAM,CAAEuB,GAAImB,EAAKnB,GAAIS,KAAAA,IAAS,IAYxF,OARA3L,KAAK0O,UAAUtD,IAAIF,EAAIM,GACvBxL,KAAK2O,KAAKnG,QAAQqH,IAAIrE,EAAKvK,SAEtBjB,KAAK2R,KAAK,CACb3G,KAAM,SACNrB,KAAM,CAAE1I,QAASuK,EAAKvK,QAAS+J,KAAM,OAAQC,QAASoB,KAGjDb,CACT,GAAC,CAAAlL,IAAA,iBAAAC,MAED,SAAsB2K,GACpB,IAAMM,EAAOxL,KAAK0O,UAAUpD,IAAIJ,GAE5BM,IACGxL,KAAK2R,KAAK,CAAE3G,KAAM,UAAWrB,KAAM,CAAE1I,QAASuK,EAAKvK,WACxDjB,KAAK0O,UAAgB,OAACxD,GACtBlL,KAAK2O,KAAKnG,QAAQ6E,OAAO7B,EAAKvK,SAElC,GAAC,CAAAX,IAAA,oBAAAC,MAED,SAAyB4Q,GAAmC,IAAAgB,EAAAnS,KACpDwL,EAAO,IAAIb,EAAe,CAC9B1D,YAAa,SAAAzG,GAAc2R,EAAKR,KAAK,CAAE3G,KAAM,cAAerB,KAAM,CAAEnJ,MAAAA,EAAOuK,QAASoG,IAAe,IAWrG,OARAnR,KAAKgP,gBAAgB5D,IAAI+F,EAAWjG,GAAIM,GACxCxL,KAAK2O,KAAKnG,QAAQqH,IAAIrE,EAAKvK,SAEtBjB,KAAK2R,KAAK,CACb3G,KAAM,SACNrB,KAAM,CAAE1I,QAASuK,EAAKvK,QAAS+J,KAAM,aAAcC,QAASkG,KAGvD3F,CACT,GAAC,CAAAlL,IAAA,uBAAAC,MAED,SAA4B2K,GAC1B,IAAMM,EAAOxL,KAAKgP,gBAAgB1D,IAAIJ,GAElCM,IACGxL,KAAK2R,KAAK,CAAE3G,KAAM,UAAWrB,KAAM,CAAE1I,QAASuK,EAAKvK,WACxDjB,KAAKgP,gBAAsB,OAAC9D,GAC5BlL,KAAK2O,KAAKnG,QAAQ6E,OAAO7B,EAAKvK,SAElC,GAEA,CAAAX,IAAA,SAAAC,OAAA6R,EAAAhR,EAAAC,IAAAC,MAMA,SAAAC,EAAoByJ,EAAsEE,GAAU,IAAAvB,EAAA,OAAAtI,IAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAF,MAAA,KAAA,EAC1D,KAAlCkI,EAAO3J,KAAKkS,SAAS5G,IAAIN,EAAME,IAE7B,CAAAvJ,EAAAF,KAAA,EAAA,KAAA,CAAA,OAAAE,EAAAF,KAAA,EAAQzB,KAAK2R,KAAK,CAAE3G,KAAM,SAAUrB,KAAAA,IAA0B,KAAA,EAAA,IAAA,MAAA,OAAAhI,EAAAK,OAAA,GAAAT,EAAAvB,KACvE,KAAA,SAJkBiC,EAAAC,GAAA,OAAAkQ,EAAAjQ,MAAAnC,KAAAoC,UAAA,IAMnB,CAAA9B,IAAA,SAAAC,OAAA8R,EAAAjR,EAAAC,IAAAC,MAMA,SAAAwI,EAAoBoB,EAAYvH,EAAeE,GAAc,IAAA2H,EAAA,OAAAnK,IAAAK,MAAA,SAAAuI,GAAA,cAAAA,EAAArI,KAAAqI,EAAAxI,MAAA,KAAA,EACxB,KAA7B+J,EAAOxL,KAAK0O,UAAUpD,IAAIJ,IAExB,CAAAjB,EAAAxI,KAAA,EAAA,KAAA,CAAA,OAAAwI,EAAAxI,KAAA,EAAe+J,EAAKtD,OAAOvE,EAAOE,GAAO,KAAA,EAAA,OAAAoG,EAAAP,OAAAO,SAAAA,EAAAR,MAAA,KAAA,EAAA,IAAA,MAAA,OAAAQ,EAAAjI,OAAA,GAAA8H,EAAA9J,KAClD,KAAA,SAJkBoK,EAAA4B,EAAAsG,GAAA,OAAAD,EAAAlQ,MAAAnC,KAAAoC,UAAA,IAMnB,CAAA9B,IAAA,YAAAC,OAAAgJ,EAAAnI,EAAAC,IAAAC,MAKA,SAAAiR,EAAuBrH,EAAUsH,GAAA,IAAA3R,EAAAE,EAAAyK,EAAA,OAAAnK,IAAAK,MAAA,SAAA+Q,GAAA,cAAAA,EAAA7Q,KAAA6Q,EAAAhR,MAAA,KAAA,EACI,GADAZ,EAAC2R,EAAD3R,EAAGE,EAACyR,EAADzR,IAChCyK,EAAOxL,KAAK0O,UAAUpD,IAAIJ,IAExB,CAAAuH,EAAAhR,KAAA,EAAA,KAAA,CAAA,OAAAgR,EAAAhR,KAAA,EAAe+J,EAAKrG,UAAUtE,EAAGE,GAAE,KAAA,EAAA,OAAA0R,EAAA/I,OAAA+I,SAAAA,EAAAhJ,MAAA,KAAA,EAAA,IAAA,MAAA,OAAAgJ,EAAAzQ,OAAA,GAAAuQ,EAAAvS,KAC5C,KAAA,SAJqB0S,EAAAC,GAAA,OAAApJ,EAAApH,MAAAnC,KAAAoC,UAAA,IAMtB,CAAA9B,IAAA,UAAAC,MAGA,WAAiB,IAAAqS,EAAA5S,KACfA,KAAK8G,UAAUnE,oBAAoB,cAAe3C,KAAK6R,eACvD5E,MAAMC,KAAKlN,KAAKgP,gBAAgB6D,QAAQzF,SAAQ,SAAAlC,GAAE,OAAI0H,EAAKX,qBAAqB/G,MAChF+B,MAAMC,KAAKlN,KAAK0O,UAAUmE,QAAQzF,SAAQ,SAAAlC,GAAE,OAAI0H,EAAKb,eAAe7G,MACpElL,KAAK2O,KAAK7L,SACZ,KAnBA,IAAAyG,EAZA8I,EAZAD,CA2CC,EAnKgF9H"}