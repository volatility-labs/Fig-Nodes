{"version":3,"file":"rete-connection-plugin.min.js","sources":["src/pseudoconnection.ts","src/utils.ts","src/flow/base.ts","src/flow/utils.ts","src/flow/builtin/bidirect.ts","src/flow/builtin/classic/sync-connections.ts","src/flow/builtin/classic/index.ts","src/presets/classic.ts","src/index.ts"],"sourcesContent":["import { getUID } from 'rete'\nimport { BaseArea, BaseAreaPlugin } from 'rete-area-plugin'\n\nimport { ClassicScheme, Position, SocketData } from './types'\n\n/**\n * Create pseudoconnection. Used to trigger rendering of connection that is being created by user.\n * Has additional `isPseudo` property in payload.\n * @param extra Extra payload to add to connection\n */\nexport function createPseudoconnection<Schemes extends ClassicScheme, K>(extra?: Partial<Schemes['Connection']>) {\n  let element: HTMLElement | null = null\n  let id: string | null = null\n\n  function unmount(areaPlugin: BaseAreaPlugin<Schemes, BaseArea<Schemes> | K>) {\n    if (id) {\n      areaPlugin.removeConnectionView(id)\n    }\n    element = null\n    id = null\n  }\n  function mount(areaPlugin: BaseAreaPlugin<Schemes, BaseArea<Schemes> | K>) {\n    unmount(areaPlugin)\n    id = `pseudo_${getUID()}`\n  }\n\n  return {\n    isMounted() {\n      return Boolean(id)\n    },\n    mount,\n    render(areaPlugin: BaseAreaPlugin<Schemes, BaseArea<Schemes> | K>, { x, y }: Position, data: SocketData) {\n      const isOutput = data.side === 'output'\n      const pointer = {\n        x: x + (isOutput\n          ? -3\n          : 3),\n        y\n      } // fix hover of underlying elements\n\n      if (!id) throw new Error('pseudo connection id wasn\\'t generated')\n\n      const payload = isOutput\n        ? {\n          id,\n          source: data.nodeId,\n          sourceOutput: data.key,\n          target: '',\n          targetInput: '',\n          ...extra ?? {}\n        }\n        : {\n          id,\n          target: data.nodeId,\n          targetInput: data.key,\n          source: '',\n          sourceOutput: '',\n          ...extra ?? {}\n        }\n\n      if (!element) {\n        const view = areaPlugin.addConnectionView(payload)\n\n        element = view.element\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (!element) return\n\n      void areaPlugin.emit({\n        type: 'render',\n        data: {\n          element,\n          type: 'connection',\n          payload,\n          ...isOutput\n            ? { end: pointer }\n            : { start: pointer }\n        }\n      })\n    },\n    unmount\n  }\n}\n","import { SocketData } from './types'\n/**\n * @param elements list of Element returned by document.elementsFromPoint\n */\nexport function findSocket(socketsCache: WeakMap<Element, SocketData>, elements: Element[]) {\n  for (const element of elements) {\n    const found = socketsCache.get(element)\n\n    if (found) {\n      return found\n    }\n  }\n}\n\n/**\n * Alternative to document.elementsFromPoint that traverses shadow roots\n * @param x x coordinate\n * @param y y coordinate\n * @param root root element to search in\n */\nexport function elementsFromPoint(x: number, y: number, root: ShadowRoot | Document = document) {\n  const elements = root.elementsFromPoint(x, y)\n  const shadowRoot = elements[0]?.shadowRoot\n\n  if (shadowRoot && shadowRoot !== root) {\n    elements.unshift(...elementsFromPoint(x, y, shadowRoot))\n  }\n\n  return elements\n}\n","import { BaseSchemes, NodeEditor, Scope } from 'rete'\n\nimport { Connection, SocketData } from '../types'\n\nexport type Context<Schemes extends BaseSchemes, K extends any[]> = {\n  editor: NodeEditor<Schemes>\n  scope: Scope<Connection, K>\n  socketsCache: Map<Element, SocketData>\n}\nexport type EventType = 'up' | 'down'\nexport type PickParams = { socket: SocketData, event: EventType }\n\nexport abstract class Flow<Schemes extends BaseSchemes, K extends any[]> {\n  public abstract pick(params: PickParams, context: Context<Schemes, K>): Promise<void>\n  public abstract getPickedSocket(): SocketData | undefined\n  public abstract drop(context: Context<Schemes, K>): void\n}\n","import { getUID } from 'rete'\n\nimport { ClassicScheme, SocketData } from '../types'\nimport { Context, PickParams } from './base'\n\nexport interface StateContext<Schemes extends ClassicScheme, K extends any[]> {\n  currentState: State<Schemes, K>\n  switchTo(state: State<Schemes, K>): void\n}\n\nexport abstract class State<Schemes extends ClassicScheme, K extends any[]> {\n  context!: StateContext<Schemes, K>\n  initial: SocketData | undefined\n\n  setContext(context: StateContext<Schemes, K>) {\n    this.context = context\n  }\n\n  abstract pick(params: PickParams, context: Context<Schemes, K>): Promise<void>\n  abstract drop(context: Context<Schemes, K>): void\n}\n\nexport function getSourceTarget(initial: SocketData, socket: SocketData) {\n  const forward = initial.side === 'output' && socket.side === 'input'\n  const backward = initial.side === 'input' && socket.side === 'output'\n  const [source, target] = forward\n    ? [initial, socket]\n    : backward\n      ? [socket, initial]\n      : []\n\n  if (source && target) return [source, target]\n}\n\nexport function canMakeConnection(initial: SocketData, socket: SocketData) {\n  return Boolean(getSourceTarget(initial, socket))\n}\n\nexport function makeConnection<Schemes extends ClassicScheme, K extends any[]>(initial: SocketData, socket: SocketData, context: Context<Schemes, K>) {\n  const [source, target] = getSourceTarget(initial, socket) || [null, null]\n\n  if (source && target) {\n    void context.editor.addConnection({\n      id: getUID(),\n      source: source.nodeId,\n      sourceOutput: source.key,\n      target: target.nodeId,\n      targetInput: target.key\n    })\n    return true\n  }\n}\n","/* eslint-disable @typescript-eslint/require-await */\nimport { ClassicScheme, SocketData } from '../../types'\nimport { Context, Flow, PickParams } from '../base'\nimport { makeConnection as defaultMakeConnection, State, StateContext } from '../utils'\n\n/**\n * Bidirect flow params\n */\nexport type BidirectParams<Schemes extends ClassicScheme> = {\n  /** If true, user can pick a pseudo-connection by clicking on socket, not only by pointerdown */\n  pickByClick: boolean\n  /** Custom function to make connection */\n  makeConnection: <K extends any[]>(from: SocketData, to: SocketData, context: Context<Schemes, K>) => boolean | undefined\n}\n\nclass Picked<Schemes extends ClassicScheme, K extends any[]> extends State<Schemes, K> {\n  constructor(public initial: SocketData, private params: BidirectParams<Schemes>) {\n    super()\n  }\n\n  async pick({ socket }: PickParams, context: Context<Schemes, K>): Promise<void> {\n    if (this.params.makeConnection(this.initial, socket, context)) {\n      this.drop(context, socket, true)\n    } else if (!this.params.pickByClick) {\n      this.drop(context, socket)\n    }\n  }\n\n  drop(context: Context<ClassicScheme, K>, socket: SocketData | null = null, created = false): void {\n    if (this.initial) {\n      void context.scope.emit({ type: 'connectiondrop', data: { initial: this.initial, socket, created } })\n    }\n    this.context.switchTo(new Idle<Schemes, K>(this.params))\n  }\n}\n\nclass Idle<Schemes extends ClassicScheme, K extends any[]> extends State<Schemes, K> {\n  constructor(private params: BidirectParams<Schemes>) {\n    super()\n  }\n\n  async pick({ socket, event }: PickParams, context: Context<Schemes, K>): Promise<void> {\n    if (event === 'down') {\n      if (await context.scope.emit({ type: 'connectionpick', data: { socket } })) {\n        this.context.switchTo(new Picked(socket, this.params))\n      } else {\n        this.drop(context)\n      }\n    }\n  }\n\n  drop(context: Context<Schemes, K>, socket: SocketData | null = null, created = false): void {\n    if (this.initial) {\n      void context.scope.emit({ type: 'connectiondrop', data: { initial: this.initial, socket, created } })\n    }\n    delete this.initial\n  }\n}\n\n/**\n * Bidirect flow. User can pick a socket and connect it by releasing mouse button.\n * More simple than classic flow, but less functional (can't remove connection by clicking on input socket).\n */\nexport class BidirectFlow<Schemes extends ClassicScheme, K extends any[]> implements StateContext<Schemes, K>, Flow<Schemes, K> {\n  currentState!: State<Schemes, K>\n\n  constructor(params?: Partial<BidirectParams<Schemes>>) {\n    const pickByClick = Boolean(params?.pickByClick)\n    const makeConnection = params?.makeConnection || defaultMakeConnection\n\n    this.switchTo(new Idle({ pickByClick, makeConnection }))\n  }\n\n  public async pick(params: PickParams, context: Context<Schemes, K>) {\n    await this.currentState.pick(params, context)\n  }\n\n  public getPickedSocket() {\n    return this.currentState.initial\n  }\n\n  public drop(context: Context<Schemes, K>) {\n    this.currentState.drop(context)\n  }\n\n  public switchTo(state: State<Schemes, K>): void {\n    state.setContext(this)\n    this.currentState = state\n  }\n}\n","import { NodeEditor } from 'rete'\n\nimport { ClassicScheme, SocketData } from '../../../types'\n\nfunction findPort<Schemes extends ClassicScheme>(socket: SocketData, editor: NodeEditor<Schemes>) {\n  const node = editor.getNode(socket.nodeId)\n\n  if (!node) throw new Error('cannot find node')\n\n  const list = socket.side === 'input'\n    ? node.inputs\n    : node.outputs\n\n  return list[socket.key]\n}\nfunction findConnections<Schemes extends ClassicScheme>(socket: SocketData, editor: NodeEditor<Schemes>) {\n  const { nodeId, side, key } = socket\n\n  return editor.getConnections().filter(connection => {\n    if (side === 'input') {\n      return connection.target === nodeId && connection.targetInput === key\n    }\n    if (side === 'output') {\n      return connection.source === nodeId && connection.sourceOutput === key\n    }\n  })\n}\n\n/**\n * Remove existing connections if Port doesnt allow multiple connections\n */\nexport function syncConnections<Schemes extends ClassicScheme>(sockets: SocketData[], editor: NodeEditor<Schemes>) {\n  const connections: Schemes['Connection'][] = sockets.map(socket => {\n    const port = findPort(socket, editor)\n    const multiple = port?.multipleConnections\n\n    if (multiple) return []\n\n    return findConnections(socket, editor)\n  }).flat()\n\n  return {\n    commit() {\n      const uniqueIds = Array.from(new Set(connections.map(({ id }) => id)))\n\n      uniqueIds.forEach(id => void editor.removeConnection(id))\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/require-await */\n\nimport { ClassicScheme, SocketData } from '../../../types'\nimport { Context, Flow, PickParams } from '../../base'\nimport {\n  canMakeConnection as defaultCanMakeConnection, makeConnection as defaultMakeConnection, State, StateContext\n} from '../../utils'\nimport { syncConnections } from './sync-connections'\n\n/**\n * Classic flow params\n */\nexport type ClassicParams<Schemes extends ClassicScheme> = {\n  /** Custom function to check if connection can be made */\n  canMakeConnection: (from: SocketData, to: SocketData) => boolean | undefined\n  /** Custom function to make connection */\n  makeConnection: <K extends any[]>(from: SocketData, to: SocketData, context: Context<Schemes, K>) => boolean | undefined\n}\n\nclass Picked<Schemes extends ClassicScheme, K extends any[]> extends State<Schemes, K> {\n  constructor(public initial: SocketData, private params: ClassicParams<Schemes>) {\n    super()\n  }\n\n  async pick({ socket }: PickParams, context: Context<Schemes, K>): Promise<void> {\n    if (this.params.canMakeConnection(this.initial, socket)) {\n      syncConnections([this.initial, socket], context.editor).commit()\n      const created = this.params.makeConnection(this.initial, socket, context)\n\n      this.drop(context, created\n        ? socket\n        : null, created)\n    }\n  }\n\n  drop(context: Context<Schemes, K>, socket: SocketData | null = null, created = false): void {\n    if (this.initial) {\n      void context.scope.emit({ type: 'connectiondrop', data: { initial: this.initial, socket, created } })\n    }\n    this.context.switchTo(new Idle(this.params))\n  }\n}\n\nclass PickedExisting<Schemes extends ClassicScheme, K extends any[]> extends State<Schemes, K> {\n  initial!: SocketData\n  outputSocket: SocketData\n\n  constructor(public connection: Schemes['Connection'], private params: ClassicParams<Schemes>, context: Context<Schemes, K>) {\n    super()\n    const outputSocket = Array.from(context.socketsCache.values()).find(data => {\n      return data.nodeId === this.connection.source\n        && data.side === 'output'\n        && data.key === this.connection.sourceOutput\n    })\n\n    if (!outputSocket) throw new Error('cannot find output socket')\n\n    this.outputSocket = outputSocket\n  }\n\n  async init(context: Context<Schemes, K>) {\n    void context.scope.emit({ type: 'connectionpick', data: { socket: this.outputSocket } }).then(response => {\n      if (response) {\n        void context.editor.removeConnection(this.connection.id)\n        this.initial = this.outputSocket\n      } else {\n        this.drop(context)\n      }\n    })\n  }\n\n  async pick({ socket, event }: PickParams, context: Context<Schemes, K>): Promise<void> {\n    if (this.initial && !(socket.side === 'input' && this.connection.target === socket.nodeId && this.connection.targetInput === socket.key)) {\n      if (this.params.canMakeConnection(this.initial, socket)) {\n        syncConnections([this.initial, socket], context.editor).commit()\n        const created = this.params.makeConnection(this.initial, socket, context)\n        const droppedSocket = created\n          ? socket\n          : null\n\n        this.drop(context, droppedSocket, created)\n      }\n    } else if (event === 'down') {\n      if (this.initial) {\n        syncConnections([this.initial, socket], context.editor).commit()\n        const created = this.params.makeConnection(this.initial, socket, context)\n        const droppedSocket = created\n          ? null\n          : socket\n\n        this.drop(context, droppedSocket, created)\n      }\n    }\n  }\n\n  drop(context: Context<Schemes, K>, socket: SocketData | null = null, created = false): void {\n    if (this.initial) {\n      void context.scope.emit({ type: 'connectiondrop', data: { initial: this.initial, socket, created } })\n    }\n    this.context.switchTo(new Idle<Schemes, K>(this.params))\n  }\n}\n\nclass Idle<Schemes extends ClassicScheme, K extends any[]> extends State<Schemes, K> {\n  constructor(private params: ClassicParams<Schemes>) {\n    super()\n  }\n\n  async pick({ socket, event }: PickParams, context: Context<Schemes, K>): Promise<void> {\n    if (event !== 'down') return\n    if (socket.side === 'input') {\n      const connection = context\n        .editor.getConnections()\n        .find(item => item.target === socket.nodeId && item.targetInput === socket.key)\n\n      if (connection) {\n        const state = new PickedExisting(connection, this.params, context)\n\n        await state.init(context)\n        this.context.switchTo(state)\n        return\n      }\n    }\n\n    if (await context.scope.emit({ type: 'connectionpick', data: { socket } })) {\n      this.context.switchTo(new Picked(socket, this.params))\n    } else {\n      this.drop(context)\n    }\n  }\n\n  drop(context: Context<Schemes, K>, socket: SocketData | null = null, created = false): void {\n    if (this.initial) {\n      void context.scope.emit({ type: 'connectiondrop', data: { initial: this.initial, socket, created } })\n    }\n    delete this.initial\n  }\n}\n\n/**\n * Classic flow. User can pick/click a socket and connect it by releasing/clicking on another socket.\n * If connection already exists and user clicks on input socket, connection will be removed.\n */\nexport class ClassicFlow<Schemes extends ClassicScheme, K extends any[]> implements StateContext<Schemes, K>, Flow<Schemes, K> {\n  currentState!: State<Schemes, K>\n\n  constructor(params?: Partial<ClassicParams<Schemes>>) {\n    const canMakeConnection = params?.canMakeConnection || defaultCanMakeConnection\n    const makeConnection = params?.makeConnection || defaultMakeConnection\n\n    this.switchTo(new Idle<Schemes, K>({ canMakeConnection, makeConnection }))\n  }\n\n  public async pick(params: PickParams, context: Context<Schemes, K>) {\n    await this.currentState.pick(params, context)\n  }\n\n  public getPickedSocket() {\n    return this.currentState.initial\n  }\n\n  public switchTo(state: State<Schemes, K>): void {\n    state.setContext(this)\n    this.currentState = state\n  }\n\n  public drop(context: Context<Schemes, K>) {\n    this.currentState.drop(context)\n  }\n}\n","import { ClassicFlow } from '../flow'\n\n/**\n * Classic preset. Uses `ClassicFlow` for managing connections by user\n */\nexport function setup() {\n  return () => new ClassicFlow()\n}\n","import { NodeEditor, Scope } from 'rete'\nimport { BaseArea, BaseAreaPlugin, RenderSignal } from 'rete-area-plugin'\n\nimport { Flow } from './flow'\nimport { EventType } from './flow/base'\nimport { createPseudoconnection } from './pseudoconnection'\nimport { ClassicScheme, Connection, Position, Preset, Side, SocketData } from './types'\nimport { elementsFromPoint, findSocket } from './utils'\n\nexport * from './flow'\nexport * as Presets from './presets'\nexport { createPseudoconnection } from './pseudoconnection'\nexport type { Connection, ConnectionExtra, Preset, Side, SocketData } from './types'\n\ntype Requires =\n  | { type: 'pointermove', data: { position: Position, event: PointerEvent } }\n  | { type: 'pointerup', data: { position: Position, event: PointerEvent } }\n  | RenderSignal<'socket', {\n    nodeId: string\n    side: Side\n    key: string\n  }>\n  | { type: 'unmount', data: { element: HTMLElement } }\n\n/**\n * Connection plugin. Responsible for user interaction with connections (creation, deletion)\n * @priority 9\n * @emits connectionpick\n * @emits connectiondrop\n * @listens pointermove\n * @listens pointerup\n * @listens render\n * @listens unmount\n */\nexport class ConnectionPlugin<Schemes extends ClassicScheme, K = Requires> extends Scope<Connection, [Requires | K]> {\n  presets: Preset<Schemes>[] = []\n  private areaPlugin!: BaseAreaPlugin<Schemes, BaseArea<Schemes>>\n  private editor!: NodeEditor<Schemes>\n  private currentFlow: Flow<Schemes, any[]> | null = null\n  private preudoconnection = createPseudoconnection({ isPseudo: true })\n  private socketsCache = new Map<Element, SocketData>()\n\n  constructor() {\n    super('connection')\n  }\n\n  /**\n   * Add preset to the plugin\n   * @param preset Preset to add\n   */\n  public addPreset(preset: Preset<Schemes>) {\n    this.presets.push(preset)\n  }\n\n  private findPreset(data: SocketData) {\n    for (const preset of this.presets) {\n      const flow = preset(data)\n\n      if (flow) return flow\n    }\n    return null\n  }\n\n  update() {\n    if (!this.currentFlow) return\n    const socket = this.currentFlow.getPickedSocket()\n\n    if (socket) {\n      this.preudoconnection.render(this.areaPlugin, this.areaPlugin.area.pointer, socket)\n    }\n  }\n\n  /**\n   * Drop pseudo-connection if exists\n   * @emits connectiondrop\n   */\n  drop() {\n    const flowContext = { editor: this.editor, scope: this, socketsCache: this.socketsCache }\n\n    if (this.currentFlow) {\n      this.currentFlow.drop(flowContext)\n      this.preudoconnection.unmount(this.areaPlugin)\n      this.currentFlow = null\n    }\n  }\n\n  // eslint-disable-next-line max-statements\n  async pick(event: PointerEvent, type: EventType) {\n    const flowContext = { editor: this.editor, scope: this, socketsCache: this.socketsCache }\n    const pointedElements = elementsFromPoint(event.clientX, event.clientY)\n    const pickedSocket = findSocket(this.socketsCache, pointedElements)\n\n    if (pickedSocket) {\n      event.preventDefault()\n      event.stopPropagation()\n      this.currentFlow = this.currentFlow || this.findPreset(pickedSocket)\n\n      if (this.currentFlow) {\n        await this.currentFlow.pick({ socket: pickedSocket, event: type }, flowContext)\n        this.preudoconnection.mount(this.areaPlugin)\n      }\n    } else if (this.currentFlow) {\n      this.currentFlow.drop(flowContext)\n    }\n    if (this.currentFlow && !this.currentFlow.getPickedSocket()) {\n      this.preudoconnection.unmount(this.areaPlugin)\n      this.currentFlow = null\n    }\n    this.update()\n  }\n\n  setParent(scope: Scope<Requires | K>): void {\n    super.setParent(scope)\n    this.areaPlugin = this.parentScope<BaseAreaPlugin<Schemes, BaseArea<Schemes>>>(BaseAreaPlugin)\n    this.editor = this.areaPlugin.parentScope<NodeEditor<Schemes>>(NodeEditor)\n\n    const pointerdownSocket = (e: PointerEvent) => {\n      void this.pick(e, 'down')\n    }\n\n    this.addPipe(context => {\n      if (!context || typeof context !== 'object' || !('type' in context)) return context\n\n      if (context.type === 'pointermove') {\n        this.update()\n      } else if (context.type === 'pointerup') {\n        void this.pick(context.data.event, 'up')\n      } else if (context.type === 'render') {\n        if (context.data.type === 'socket') {\n          const { element } = context.data\n\n          element.addEventListener('pointerdown', pointerdownSocket)\n          this.socketsCache.set(element, context.data)\n        }\n      } else if (context.type === 'unmount') {\n        const { element } = context.data\n\n        element.removeEventListener('pointerdown', pointerdownSocket)\n        this.socketsCache.delete(element)\n      }\n      return context\n    })\n  }\n}\n"],"names":["createPseudoconnection","extra","element","id","unmount","areaPlugin","removeConnectionView","isMounted","Boolean","mount","concat","getUID","render","_ref","data","x","y","isOutput","side","pointer","Error","payload","_objectSpread","source","nodeId","sourceOutput","key","target","targetInput","view","addConnectionView","emit","type","end","start","findSocket","socketsCache","elements","_step","_iterator","_createForOfIteratorHelper","s","n","done","value","found","get","err","e","f","elementsFromPoint","_elements$","root","arguments","length","undefined","document","shadowRoot","unshift","apply","_toConsumableArray","Flow","_createClass","_classCallCheck","State","context","this","getSourceTarget","initial","socket","forward","backward","_ref2","_slicedToArray","canMakeConnection","makeConnection","_ref4","editor","addConnection","Picked","_State","params","_this","_callSuper","_inherits","_pick","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","drop","pickByClick","stop","_x","_x2","created","scope","switchTo","Idle","_State2","_this2","_pick2","_callee2","_context2","event","sent","_x3","_x4","BidirectFlow","defaultMakeConnection","_pick3","_callee3","_context3","currentState","pick","_x5","_x6","state","setContext","syncConnections","sockets","connections","map","port","node","getNode","inputs","outputs","findPort","multipleConnections","getConnections","filter","connection","findConnections","flat","commit","Array","from","Set","forEach","removeConnection","PickedExisting","outputSocket","values","find","_init","_this3","then","response","droppedSocket","_created","_droppedSocket","_State3","_this4","_callee4","_ref3","_connection","_context4","abrupt","item","init","_x7","ClassicFlow","defaultCanMakeConnection","_pick4","_callee5","_context5","_x8","_x9","ConnectionPlugin","_Scope","_defineProperty","isPseudo","Map","preset","presets","push","flow","currentFlow","getPickedSocket","preudoconnection","area","flowContext","pointedElements","pickedSocket","clientX","clientY","preventDefault","stopPropagation","findPreset","update","parentScope","BaseAreaPlugin","NodeEditor","pointerdownSocket","addPipe","_typeof","addEventListener","set","removeEventListener","Scope"],"mappings":"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"}