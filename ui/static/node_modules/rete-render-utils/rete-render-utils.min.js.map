{"version":3,"file":"rete-render-utils.min.js","sources":["src/utils.ts","src/sockets-position/storage.ts","src/sockets-position/base-socket-position.ts","src/sockets-position/dom-socket-position.ts","src/connection.ts"],"sourcesContent":["/* eslint-disable max-statements */\n\n/**\n * Calculates the center coordinates of a child element relative to a parent element.\n * @async\n * @param child The child element whose center coordinates need to be calculated.\n * @param parent The parent element relative to which the child element's center is calculated.\n * @returns Position of the child element's center\n * @throws Error if the child element has a null offsetParent.\n */\nexport async function getElementCenter(child: HTMLElement, parent: HTMLElement) {\n  while (!child.offsetParent) {\n    await new Promise(res => setTimeout(res, 0))\n  }\n\n  let x = child.offsetLeft\n  let y = child.offsetTop\n  let currentElement = child.offsetParent as HTMLElement | null\n\n  if (!currentElement) throw new Error('child has null offsetParent')\n\n  while (currentElement !== null && currentElement !== parent) {\n    x += currentElement.offsetLeft + currentElement.clientLeft\n    y += currentElement.offsetTop + currentElement.clientTop\n    currentElement = currentElement.offsetParent as HTMLElement | null\n  }\n  const width = child.offsetWidth\n  const height = child.offsetHeight\n\n  return {\n    x: x + width / 2,\n    y: y + height / 2\n  }\n}\nexport class EventEmitter<T> {\n  listeners = new Set<(data: T) => void>()\n\n  emit(data: T) {\n    this.listeners.forEach(listener => {\n      listener(data)\n    })\n  }\n\n  listen(handler: (data: T) => void) {\n    this.listeners.add(handler)\n\n    return () => {\n      this.listeners.delete(handler)\n    }\n  }\n}\n","import { Position, Side } from '../types'\n\ntype SocketPayload = {\n  element: HTMLElement\n  side: Side\n  key: string\n  nodeId: string\n  position: Position // relative to node\n}\n\nexport class SocketsPositionsStorage {\n  elements = new Map<HTMLElement, SocketPayload[]>()\n\n  getPosition(data: { nodeId: string, key: string, side: Side }) {\n    const list = Array.from(this.elements.values()).flat()\n    const found = list.filter(item => {\n      return item.side === data.side && item.nodeId === data.nodeId && item.key === data.key\n    })\n\n    // eslint-disable-next-line no-console\n    if (found.length > 1) console.warn([\n      'Found more than one element for socket with same key and side.',\n      'Probably it was not unmounted correctly'\n    ].join(' '), data)\n\n    return found.pop()?.position ?? null\n  }\n\n  add(data: SocketPayload) {\n    const existing = this.elements.get(data.element)\n\n    this.elements.set(data.element, existing\n      ? [\n        ...existing.filter(n => !(n.nodeId === data.nodeId && n.key === data.key && n.side === data.side)), data\n      ]\n      : [data])\n  }\n\n  remove(element: SocketPayload['element']) {\n    this.elements.delete(element)\n  }\n\n  snapshot() {\n    return Array.from(this.elements.values()).flat()\n  }\n}\n","import { BaseSchemes, NodeId, Scope } from 'rete'\nimport { BaseAreaPlugin } from 'rete-area-plugin'\n\nimport { ExpectArea2DExtra, Position, Side } from '../types'\nimport { EventEmitter } from '../utils'\nimport { SocketsPositionsStorage } from './storage'\nimport { OnChange, SocketPositionWatcher } from './types'\n\ntype ListenerData = {\n  nodeId: string\n  side?: Side\n  key?: string\n}\n\n/**\n * Abstract class for socket position calculation. It can be extended to implement custom socket position calculation.\n * @abstract\n * @listens render\n * @listens rendered\n * @listens unmount\n * @listens nodetranslated\n * @listens noderesized\n */\nexport abstract class BaseSocketPosition<Schemes extends BaseSchemes, K> implements SocketPositionWatcher<Scope<never, [K]>> {\n  sockets = new SocketsPositionsStorage()\n  emitter = new EventEmitter<ListenerData>()\n  area: BaseAreaPlugin<Schemes, ExpectArea2DExtra<Schemes>> | null = null\n\n  /**\n   * The method needs to be implemented that calculates the position of the socket.\n   * @param nodeId Node ID\n   * @param side Side of the socket, 'input' or 'output'\n   * @param key Socket key\n   * @param element Socket element\n   */\n  abstract calculatePosition(nodeId: string, side: Side, key: string, element: HTMLElement): Promise<Position | null>\n\n  /**\n   * Attach the watcher to the area's child scope.\n   * @param scope Scope of the watcher that should be a child of `BaseAreaPlugin`\n   */\n  attach(scope: Scope<never, [K]>) {\n    if (this.area) return\n    if (!scope.hasParent()) return\n    this.area = scope.parentScope<BaseAreaPlugin<Schemes, ExpectArea2DExtra<Schemes>>>(BaseAreaPlugin)\n\n    // eslint-disable-next-line max-statements\n    this.area.addPipe(async context => {\n      if (context.type === 'rendered' && context.data.type === 'socket') {\n        const { nodeId, key, side, element } = context.data\n\n        const position = await this.calculatePosition(nodeId, side, key, element)\n\n        if (position) {\n          this.sockets.add({ nodeId, key, side, element, position })\n          this.emitter.emit({ nodeId, key, side })\n        }\n      } else if (context.type === 'unmount') {\n        this.sockets.remove(context.data.element)\n      } else if (context.type === 'nodetranslated') {\n        this.emitter.emit({ nodeId: context.data.id })\n      } else if (context.type === 'noderesized') {\n        const { id: nodeId } = context.data\n\n        await Promise.all(this.sockets.snapshot()\n          .filter(item => item.nodeId === context.data.id && item.side === 'output')\n          .map(async item => {\n            const { side, key, element } = item\n            const position = await this.calculatePosition(nodeId, side, key, element)\n\n            if (position) {\n              item.position = position\n            }\n          }))\n        this.emitter.emit({ nodeId })\n      } else if (context.type === 'render' && context.data.type === 'connection') {\n        const { source, target } = context.data.payload\n        const nodeId = source || target\n\n        this.emitter.emit({ nodeId })\n      }\n      return context\n    })\n  }\n\n  /**\n   * Listen to socket position changes. Usually used by rendering plugins to update the start/end of the connection.\n   * @internal\n   * @param nodeId Node ID\n   * @param side Side of the socket, 'input' or 'output'\n   * @param key Socket key\n   * @param change Callback function that is called when the socket position changes\n   */\n  listen(nodeId: NodeId, side: Side, key: string, change: OnChange) {\n    const unlisten = this.emitter.listen((data: ListenerData) => {\n      if (data.nodeId !== nodeId) return\n      if ((!data.key || data.side === side) && (!data.side || data.key === key)) {\n        const position = this.sockets.getPosition({ side, nodeId, key })\n\n        if (!position) return\n\n        const { x, y } = position\n        const nodeView = this.area?.nodeViews.get(nodeId)\n\n        if (nodeView) change({\n          x: x + nodeView.position.x,\n          y: y + nodeView.position.y\n        })\n      }\n    })\n\n    this.sockets.snapshot().forEach(data => {\n      if (data.nodeId === nodeId) this.emitter.emit(data)\n    })\n    return unlisten\n  }\n}\n","import { BaseSchemes } from 'rete'\n\nimport { Position, Side } from '../types'\nimport { getElementCenter } from '../utils'\nimport { BaseSocketPosition } from './base-socket-position'\n\n/**\n * Props for `DOMSocketPosition` class.\n */\nexport type Props = {\n  /**\n   * Allows to customize the position of the socket. By default, the position is shifted by 12px on the x-axis relative to the center of the socket.\n   * @param position Center position of the socket\n   * @param nodeId Node ID\n   * @param side Side of the socket, 'input' or 'output'\n   * @param key Socket key\n   * @returns Custom position of the socket\n   */\n  offset?: (position: Position, nodeId: string, side: Side, key: string) => Position\n}\n\n/**\n * Class for socket position calculation based on DOM elements. It uses `getElementCenter` function to calculate the position.\n */\nexport class DOMSocketPosition<Schemes extends BaseSchemes, K> extends BaseSocketPosition<Schemes, K> {\n  constructor(private props?: Props) {\n    super()\n  }\n\n  async calculatePosition(nodeId: string, side: Side, key: string, element: HTMLElement) {\n    const view = this.area?.nodeViews.get(nodeId)\n\n    if (!view?.element) return null\n    const position = await getElementCenter(element, view.element)\n\n    if (this.props?.offset) return this.props.offset(position, nodeId, side, key)\n\n    return {\n      x: position.x + 12 * (side === 'input'\n        ? -1\n        : 1),\n      y: position.y\n    }\n  }\n}\n\n/**\n * Wrapper function for `DOMSocketPosition` class.\n * @param props Props for `DOMSocketPosition` class\n */\nexport function getDOMSocketPosition<Schemes extends BaseSchemes, K>(props?: Props) {\n  return new DOMSocketPosition<Schemes, K>(props)\n}\n","import { Position } from './types'\n\n/**\n * Get classic SVG path for a connection between two points.\n * @param points Array of two points\n * @param curvature Curvature of the connection\n */\nexport function classicConnectionPath(points: [Position, Position], curvature: number) {\n  const [{ x: x1, y: y1 }, { x: x2, y: y2 }] = points\n  const vertical = Math.abs(y1 - y2)\n  const hx1 = x1 + Math.max(vertical / 2, Math.abs(x2 - x1)) * curvature\n  const hx2 = x2 - Math.max(vertical / 2, Math.abs(x2 - x1)) * curvature\n\n  return `M ${x1} ${y1} C ${hx1} ${y1} ${hx2} ${y2} ${x2} ${y2}`\n}\n\n/**\n * Get loop SVG path for a connection between two points.\n * @param points Array of two points\n * @param curvature Curvature of the loop\n * @param size Size of the loop\n */\nexport function loopConnectionPath(points: [Position, Position], curvature: number, size: number) {\n  const [{ x: x1, y: y1 }, { x: x2, y: y2 }] = points\n  const k = y2 > y1\n    ? 1\n    : -1\n  const scale = size + Math.abs(x1 - x2) / (size / 2)\n  const middleX = (x1 + x2) / 2\n  const middleY = y1 - k * scale\n  const vertical = (y2 - y1) * curvature\n\n  return `\n        M ${x1} ${y1}\n        C ${x1 + scale} ${y1}\n        ${x1 + scale} ${middleY - vertical}\n        ${middleX} ${middleY}\n        C ${x2 - scale} ${middleY + vertical}\n        ${x2 - scale} ${y2}\n        ${x2} ${y2}\n    `\n}\n"],"names":["getElementCenter","_x","_x2","_getElementCenter","apply","this","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","child","parent","x","y","currentElement","width","height","wrap","_context","prev","next","offsetParent","Promise","res","setTimeout","offsetLeft","offsetTop","Error","clientLeft","clientTop","offsetWidth","offsetHeight","abrupt","stop","EventEmitter","_createClass","_classCallCheck","_defineProperty","Set","key","value","data","listeners","forEach","listener","handler","_this","add","SocketsPositionsStorage","Map","_found$pop$position","_found$pop","found","Array","from","elements","values","flat","filter","item","side","nodeId","length","console","warn","join","pop","position","existing","get","element","set","concat","_toConsumableArray","n","BaseSocketPosition","scope","area","hasParent","parentScope","BaseAreaPlugin","addPipe","_ref","_callee2","context","_context$data","_nodeId","_key","_side","_element","_nodeId2","_context$data$payload","source","target","_nodeId3","_context2","type","calculatePosition","sent","sockets","emitter","emit","remove","id","all","snapshot","map","_ref2","payload","change","_this2","unlisten","listen","_this2$area","getPosition","nodeView","nodeViews","DOMSocketPosition","_BaseSocketPosition","props","_callSuper","_inherits","_calculatePosition","_this$area","_this$props","view","offset","_x3","_x4","points","curvature","_points","_slicedToArray","_points$","x1","y1","_points$2","x2","y2","vertical","Math","abs","hx1","max","hx2","size","_points2","_points2$","_points2$2","k","scale","middleX","middleY"],"mappings":"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"}