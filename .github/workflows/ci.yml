name: CI

'on':
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  python:
    name: Python Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install Poetry
        uses: abatilo/actions-poetry@v3
        with:
          poetry-version: '1.8.3'

      - name: Configure Poetry to not create venvs inside
        run: poetry config virtualenvs.in-project true

      - name: Cache Poetry virtualenv
        uses: actions/cache@v4
        with:
          path: ./.venv
          key: ${{ runner.os }}-poetry-${{ hashFiles('pyproject.toml', 'poetry.lock') }}

      - name: Install dependencies
        run: |
          poetry install --no-interaction --no-ansi

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'
          cache-dependency-path: ui/static/yarn.lock

      - name: Install UI dependencies
        working-directory: ui/static
        run: yarn --frozen-lockfile

      - name: Build UI
        working-directory: ui/static
        run: yarn build

      - name: Run unit tests with coverage
        env:
          PYTEST_ADDOPTS: '-q'
          # Avoid network-bound integrations by default
          TAVILY_API_KEY: ''
          OLLAMA_HOST: 'http://127.0.0.1:11434'
        run: |
          poetry run pytest tests/unit --cov=./ --cov-report=xml --cov-report=term-missing

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: python-coverage-xml
          path: coverage.xml

  ui:
    name: UI Lint and Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ui/static
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'
          cache-dependency-path: ui/static/yarn.lock

      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Lint
        run: yarn lint

      - name: Run unit tests with coverage
        run: |
          yarn test --coverage --reporter=verbose --run

      - name: Upload UI coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ui-coverage
          path: ui/static/coverage


